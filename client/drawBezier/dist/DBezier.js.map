{"version":3,"file":"DBezier.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["// Math - 内联函数\nconst { abs, cos, sin, acos, atan2, sqrt, pow, PI } = Math\n\n// 生成根的立方根函数\nfunction crt(v) {\n\treturn v < 0? -pow(-v, 1 / 3): pow(v, 1 / 3)\n}\n\n// 常量\nconst TAU = 2 * PI\n\n// 零坐标\nconst ZERO = { x: 0, y: 0 }\n\n// 勒让德-高斯 横坐标，n=24 (x_i 值，在 i=n 处定义为 n 阶勒让德多项式 Pn(x) 的根)\nconst Tvalues = [\n\t-0.0640568928626056260850430826247450385909,\n\t0.0640568928626056260850430826247450385909,\n\t-0.1911188674736163091586398207570696318404,\n\t0.1911188674736163091586398207570696318404,\n\t-0.3150426796961633743867932913198102407864,\n\t0.3150426796961633743867932913198102407864,\n\t-0.4337935076260451384870842319133497124524,\n\t0.4337935076260451384870842319133497124524,\n\t-0.5454214713888395356583756172183723700107,\n\t0.5454214713888395356583756172183723700107,\n\t-0.6480936519369755692524957869107476266696,\n\t0.6480936519369755692524957869107476266696,\n\t-0.7401241915785543642438281030999784255232,\n\t0.7401241915785543642438281030999784255232,\n\t-0.8200019859739029219539498726697452080761,\n\t0.8200019859739029219539498726697452080761,\n\t-0.8864155270044010342131543419821967550873,\n\t0.8864155270044010342131543419821967550873,\n\t-0.9382745520027327585236490017087214496548,\n\t0.9382745520027327585236490017087214496548,\n\t-0.9747285559713094981983919930081690617411,\n\t0.9747285559713094981983919930081690617411,\n\t-0.9951872199970213601799974097007368118745,\n\t0.9951872199970213601799974097007368118745,\n]\n\n// 勒让德-高斯 权重 n=24（w_i 值，由链接到 Bezier 入门文章中的函数定义）\nconst Cvalues = [\n\t0.1279381953467521569740561652246953718517,\n\t0.1279381953467521569740561652246953718517,\n\t0.1258374563468282961213753825111836887264,\n\t0.1258374563468282961213753825111836887264,\n\t0.121670472927803391204463153476262425607,\n\t0.121670472927803391204463153476262425607,\n\t0.1155056680537256013533444839067835598622,\n\t0.1155056680537256013533444839067835598622,\n\t0.1074442701159656347825773424466062227946,\n\t0.1074442701159656347825773424466062227946,\n\t0.0976186521041138882698806644642471544279,\n\t0.0976186521041138882698806644642471544279,\n\t0.086190161531953275917185202983742667185,\n\t0.086190161531953275917185202983742667185,\n\t0.0733464814110803057340336152531165181193,\n\t0.0733464814110803057340336152531165181193,\n\t0.0592985849154367807463677585001085845412,\n\t0.0592985849154367807463677585001085845412,\n\t0.0442774388174198061686027482113382288593,\n\t0.0442774388174198061686027482113382288593,\n\t0.0285313886289336631813078159518782864491,\n\t0.0285313886289336631813078159518782864491,\n\t0.0123412297999871995468056670700372915759,\n\t0.0123412297999871995468056670700372915759,\n]\n\n// 有效的浮点精度小数\nconst epsilon = 0.000001\n\n// 最大&最小安全整数\nconst nMax = Number.MAX_SAFE_INTEGER || 9007199254740991\nconst nMin = Number.MIN_SAFE_INTEGER || -9007199254740991\n\n// 获取真实数据类型\nexport const getClass = element => {\n\treturn Object.prototype.toString.call(element).slice(8, -1)\n}\n\n// 深拷贝\nexport const deepCopy = obj => {\n\ttry {\n\t\treturn JSON.parse(JSON.stringify(obj))\n\t} catch(e) {\n\t\tconsole.error(e)\n\t\treturn obj\n\t}\n}\n\n// 对象是否相等\nexport const objEqual = (obj1, obj2) => {\n\ttry {\n\t\treturn JSON.stringify(obj1) === JSON.stringify(obj2)\n\t} catch(e) {\n\t\tconsole.error(e)\n\t\treturn false\n\t}\n}\n\n// 获取两点间的距离\nexport const getDistance = (x1, y1, x2, y2) => {\n\tlet dx = x1 - x2,\n\t\tdy = y1 - y2\n\treturn sqrt(pow(dx, 2) + pow(dy, 2))\n}\n\n// 推导\nexport const derive = points => {\n\tconst dpoints = []\n\tfor (let p = points, len = p.length, last = len - 1; len > 1; len--, last--) {\n\t\tconst list = []\n\t\tfor (let j = 0; j < last; j++) {\n\t\t\tlet dpt = {\n\t\t\t\tx: last * (p[j + 1].x - p[j].x),\n\t\t\t\ty: last * (p[j + 1].y - p[j].y),\n\t\t\t}\n\t\t\tlist.push(dpt)\n\t\t}\n\t\tdpoints.push(list)\n\t\tp = list\n\t}\n\treturn dpoints\n}\n\n// 计算点坐标 (根据范围t)\nexport const compute = (t = 0, points) => {\n\t// 捷径\n\tif (t === 0) {\n\t\tpoints[0].t = 0\n\t\treturn points[0]\n\t}\n\n\tconst order = points.length - 1\n\n\tif (t === 1) {\n\t\tpoints[order].t = 1\n\t\treturn points[order]\n\t}\n\n\tconst mt = 1 - t\n\tlet p = points,\n\t\t[ p0, p1, p2, p3 ] = p\n\n\tlet mt2 = mt ** 2,\n\t\tt2  = t  ** 2,\n\t\ta, b, c, d = 0\n\n\t// 二次/三次曲线\n\tif (order === 2) {\n\t\tp  = [p0, p1, p2, ZERO]\n\t\ta  = mt2\n\t\tb  = mt * t * 2\n\t\tc  = t2\n\t\tp3 = p[3]\n\t} else if (order === 3) {\n\t\ta = mt2 * mt\n\t\tb = mt2 * t * 3\n\t\tc = mt * t2 * 3\n\t\td = t  * t2\n\t}\n\t\n\tconst ret = {\n\t\tx: a * p0.x + b * p1.x + c * p2.x + d * p3.x,\n\t\ty: a * p0.y + b * p1.y + c * p2.y + d * p3.y,\n\t\tt,\n\t}\n\n\treturn ret\n}\n\n// 获取线段长度\nexport const length = derivativeFn => {\n\tconst z = .5,\n\t\tlen = Tvalues.length\n\n\tlet sum = 0\n\n\tfor (let i = 0, t; i < len; i++) {\n\t\tt = z * Tvalues[i] + z\n\t\tsum += Cvalues[i] * getArc(t, derivativeFn)\n\t}\n\n\treturn z * sum\n}\n\n// 获取角度\nexport const getArc = (t, derivativeFn) => {\n\tconst d = derivativeFn(t)\n\tlet l = d.x ** 2 + d.y ** 2\n\treturn sqrt(l)\n}\n\n// 获取最小最大值\nexport const getMinMax = (curve, d, list) => {\n\tif (!list) return { min: 0, max: 0 }\n\n\tlet min = nMax,\n\t\tmax = nMin,\n\t\tt, c\n\tif (list.indexOf(0) === -1) {\n\t\tlist = [0].concat(list)\n\t}\n\tif (list.indexOf(1) === -1) {\n\t\tlist.push(1)\n\t}\n\tfor (let i = 0, len = list.length; i < len; i++) {\n\t\tt = list[i]\n\t\tc = curve.get(t)\n\t\tif (c[d] < min) {\n\t\t\tmin = c[d]\n\t\t}\n\t\tif (c[d] > max) {\n\t\t\tmax = c[d]\n\t\t}\n\t}\n\treturn {\n\t\tmin,\n\t\tmax,\n\t\tmid:  (min + max) / 2,\n\t\tsize: max - min\n\t}\n}\n\n// 求根\nexport const roots = (points, line) => {\n\tline = line || { p1: { x: 0, y: 0 }, p2: { x: 1, y: 0 } }\n\n\tconst aligned = align(points, line)\n\tconst reduce  = t => 0 <= t && t <= 1\n\n\tlet pa = aligned[0].y,\n\t\tpb = aligned[1].y,\n\t\tpc = aligned[2].y,\n\t\tpd = aligned[3].y\n\n\tlet d = -pa + 3 * pb - 3 * pc + pd,\n\t\ta = 3 * pa - 6 * pb + 3 * pc,\n\t\tb = -3 * pa + 3 * pb,\n\t\tc = pa\n\n\t// 判断三次曲线\n\t/*if (approximately(d, 0)) {\n\t\t// 判断二次曲线\n\t\tif (approximately(a, 0)) {\n\t\t\t// 判断线性\n\t\t\tif (approximately(b, 0)) {\n\t\t\t\t// 无解\n\t\t\t\treturn []\n\t\t\t}\n\t\t\treturn [-c / b].filter(reduce)\n\t\t}\n\t\t// 二次解法\n\t\tlet q  = sqrt(b * b - 4 * a * c),\n\t\t\ta2 = 2 * a\n\t\treturn [(q - b) / a2, (-b - q) / a2].filter(reduce)\n\t}*/\n\n\t// 三次解法\n\ta /= d\n\tb /= d\n\tc /= d\n\n\tlet p  = (3 * b - a ** 2) / 3,\n\t\tp3 = p / 3,\n\t\tq  = (2 * a ** 3 - 9 * a * b + 27 * c) / 27,\n\t\tq2 = q / 2,\n\t\tdiscriminant = q2 ** 2 + p3 ** 3\n\n\tlet u1, v1, x1, x2, x3\n\tif (discriminant < 0) {\n\t\tlet mp3    = -p / 3,\n\t\t\tmp33   = mp3 * mp3 * mp3,\n\t\t\tr      = sqrt(mp33),\n\t\t\tt      = -q / (2 * r),\n\t\t\tcosphi = t < -1 ? -1 : t > 1 ? 1 : t,\n\t\t\tphi    = acos(cosphi),\n\t\t\tcrtr   = crt(r),\n\t\t\tt1     = 2 * crtr\n\t\tx1 = t1 * cos(phi / 3) - a / 3\n\t\tx2 = t1 * cos((phi + TAU) / 3) - a / 3\n\t\tx3 = t1 * cos((phi + 2 * TAU) / 3) - a / 3\n\t\treturn [x1, x2, x3].filter(reduce)\n\t} else if (discriminant === 0) {\n\t\tu1 = q2 < 0 ? crt(-q2) : -crt(q2)\n\t\tx1 = 2 * u1 - a / 3\n\t\tx2 = -u1 - a / 3\n\t\treturn [x1, x2].filter(reduce)\n\t} else {\n\t\tconst sd = sqrt(discriminant)\n\t\tu1 = crt(-q2 + sd)\n\t\tv1 = crt(q2 + sd)\n\t\treturn [u1 - v1 - a / 3].filter(reduce)\n\t}\n}\n\n// 求根\nexport const droots = p => {\n\tlet [a, b, c] = p\n\t// 二次根\n\tif (p.length === 3) {\n\t\tlet d = a - 2 * b + c\n\t\tif (d !== 0) {\n\t\t\tlet m1 = -sqrt(b * b - a * c),\n\t\t\t\tm2 = -a + b,\n\t\t\t\tv1 = -(m1 + m2) / d,\n\t\t\t\tv2 = -(-m1 + m2) / d\n\t\t\treturn [v1, v2]\n\t\t} else if (b !== c && d === 0) {\n\t\t\treturn [(2 * b - c) / (2 * (b - c))]\n\t\t}\n\t\treturn []\n\t}\n\n\t// 线性根\n\tif (p.length === 2) {\n\t\tif (a !== b) {\n\t\t\treturn [a / (a - b)]\n\t\t}\n\t\treturn []\n\t}\n\n\treturn []\n}\n\n// 数字排序\nexport const numberSort = list => {\n\treturn list.sort((a, b) => a - b)\n}\n\n// 之间\nexport const between = (v, m, M) => {\n    return ((m <= v && v <= M) || approximately(v, m) || approximately(v, M))\n}\n\n// 约等于\nexport const approximately = (a, b, precision) => {\n    return abs(a - b) <= (precision || epsilon)\n}\n\n// 遍历\nexport const map = (v, ds, de, ts, te) => {\n\tlet d1 = de - ds,\n\t\td2 = te - ts,\n\t\tv2 = v  - ds,\n\t\tr  = v2 / d1\n\n\treturn ts + d2 * r\n}\n\n// 对齐\nexport const align = (points, line) => {\n\tlet { p1, p2 } = line,\n\t\ttx = p1.x,\n\t\tty = p1.y,\n\t\ta  = -atan2(p2.y - ty, p2.x - tx)\n\n\treturn points.map(v => {\n\t\treturn {\n\t\t\tx: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n\t\t\ty: (v.x - tx) * sin(a) + (v.y - ty) * cos(a),\n\t\t}\n\t})\n}\n\n// \nexport const pairiteration = (c1, c2) => {\n\tlet c1b = c1.bbox(),\n\t\tc2b = c2.bbox(),\n\t\tr   = 100000,\n\t\tthreshold = 0.5\n\n\tif (\n\t\tc1b.x.size + c1b.y.size < threshold &&\n\t\tc2b.x.size + c2b.y.size < threshold\n\t) {\n\t\treturn [\n\t\t\t(((r * (c1._t1 + c1._t2)) / 2) | 0) / r + '/' + (((r * (c2._t1 + c2._t2)) / 2) | 0) / r\n\t\t]\n\t}\n\n\tlet cc1 = c1.split(0.5),\n\t\tcc2 = c2.split(0.5),\n\t\tpairs = [\n\t\t\t{ left: cc1.left,  right: cc2.left },\n\t\t\t{ left: cc1.left,  right: cc2.right },\n\t\t\t{ left: cc1.right, right: cc2.right },\n\t\t\t{ left: cc1.right, right: cc2.left },\n\t\t]\n\n\tpairs = pairs.filter(pair => {\n\t\treturn bboxoverlap(pair.left.bbox(), pair.right.bbox())\n\t})\n\n\tlet results = []\n\n\tif (!pairs.length) return results\n\n\tpairs.forEach(function (pair) {\n\t\tresults = results.concat(pairiteration(pair.left, pair.right, threshold))\n\t})\n\n\tresults = results.filter(function (v, i) {\n\t\treturn results.indexOf(v) === i\n\t})\n\n\treturn results\n}\n\nexport const bboxoverlap = (b1, b2) => {\n\tlet dims = ['x', 'y'],\n\t\tlen  = dims.length,\n\t\tdim, l, t, d\n\n\tfor (let i = 0; i < len; i++) {\n\t\tdim = dims[i]\n\t\tl   = b1[dim].mid\n\t\tt   = b2[dim].mid\n\t\td   = (b1[dim].size + b2[dim].size) / 2\n\t\tif (abs(l - t) >= d) return false\n\t}\n\treturn true\n}\n\nexport const lerp = (r, v1, v2) => {\n\tlet ret = {\n\t\tx: v1.x + r * (v2.x - v1.x),\n\t\ty: v1.y + r * (v2.y - v1.y),\n\t}\n\tif (v1.z !== undefined && v2.z !== undefined) {\n\t\tret.z = v1.z + r * (v2.z - v1.z)\n\t}\n\treturn ret\n}\n\nexport const angle = function (o, v1, v2) {\n\tlet dx1   = v1.x - o.x,\n\t\tdy1   = v1.y - o.y,\n\t\tdx2   = v2.x - o.x,\n\t\tdy2   = v2.y - o.y,\n\t\tcross = dx1 * dy2 - dy1 * dx2,\n\t\tdot   = dx1 * dx2 + dy1 * dy2\n\treturn atan2(cross, dot)\n}\n","import { version } from '../package.json'\n\nimport {\n\tangle,\n\tbetween, bboxoverlap,\n\tcompute,\n\tderive, droots,\n\tlength, lerp,\n\tgetMinMax, getClass,\n\tmap, numberSort,\n\tpairiteration,\n\troots\n} from './utils'\n\n// Math - 内联函数\nconst { abs, min, max, cos, sin, acos, sqrt } = Math\nconst PI = Math.PI\n\n// 常量\n\n// 三次Bezier曲线构造函数\nclass DBezier {\n\tconstructor(coords) {\n\t\tconsole.log('version: ' + version)\n\t\tlet args = coords && coords.forEach? coords: Array.from(arguments).slice(),\n\t\t\tcoordlen, len\n\t\t\n\t\t// 支持对象形势 { x: number, y: number }\n\t\tif (getClass(args[0]) === 'Object') {\n\t\t\tconst newArgs = []\n\t\t\tcoordlen = args.length\n\t\t\targs.forEach(point => {\n\t\t\t\t['x', 'y'].forEach(d => {\n\t\t\t\t\tif (getClass(point[d]) === 'Number') newArgs.push(point[d])\n\t\t\t\t})\n\t\t\t})\n\t\t\targs = newArgs\n\t\t}\n\n\t\tlen = args.length\n\n\t\tif (coordlen) {\n\t\t\tif (coordlen !== 4) {\n\t\t\t\tthrow new Error('请输入 4 组 point[] 数据.')\n\t\t\t}\n\t\t} else {\n\t\t\tif (len !== 8) {\n\t\t\t\tthrow new Error('请输入 8 个坐标数据.')\n\t\t\t}\n\t\t}\n\n\t\tconst points = this.points = []\n\t\tfor (let i = 0; i < len; i += 2) {\n\t\t\tvar point = {\n\t\t\t\tx: args[i],\n\t\t\t\ty: args[i + 1],\n\t\t\t}\n\t\t\tpoints.push(point)\n\t\t}\n\n\t\tconst order = this.order = points.length - 1\n\n\t\tconst dims = this.dims = ['x', 'y']\n\n\t\tthis._lut = []\t// 初始化检查票\n\n\t\tthis._t1 = 0\n\t\tthis._t2 = 1\n\t\t\n\t\tthis.version = version\n\n\t\tthis.update()\n\t}\n\t// 曲线坐标 (根据t)\n\tget(t) {\n\t\treturn this.compute(t)\n\t}\n\t// 获取点 (根据索引)\n\tpoint(idx) {\n\t\treturn this.points[idx]\n\t}\n\t// 计算\n\tcompute(t) {\n\t\treturn compute(t, this.points)\n\t}\n\tupdate() {\n\t\tthis._lut = []\n\t\tthis.dpoints = derive(this.points)\n\t\t// this.computedirection()\n\t}\n\tlength() {\n\t\treturn length(this.derivative.bind(this))\n\t}\n\t// 求导数\n\tderivative(t) {\n\t\treturn compute(t, this.dpoints[0])\n\t}\n\tdderivative(t) {\n\t\treturn compute(t, this.dpoints[1])\n\t}\n\n\t// 获取盒模型\n\tbbox() {\n\t\tconst extrema = this.extrema(),\n\t\t\tresult = {}\n\t\tthis.dims.forEach(d => {\n\t\t\tresult[d] = getMinMax(this, d, extrema[d])\n\t\t})\n\t\treturn result\n\t}\n\n\toverlaps(curve) {\n\t\tlet lbbox = this.bbox(),\n\t\t\ttbbox = curve.bbox()\n\t\treturn bboxoverlap(lbbox, tbbox)\n\t}\n\n\t// 获取极限值\n\textrema() {\n\t\tlet result = {},\n\t\t\troots  = [],\n\t\t\t{ dpoints } = this\n\t\tthis.dims.forEach(dim => {\n\t\t\tlet mfn = v => v[dim],\n\t\t\t\tp   = this.dpoints[0].map(mfn)\n\n\t\t\tresult[dim] = droots(p)\n\t\t\tif (this.order === 3) {\n\t\t\t\tp = this.dpoints[1].map(mfn)\n\t\t\t\tresult[dim] = result[dim].concat(droots(p))\n\t\t\t}\n\t\t\tresult[dim] = result[dim].filter(t => t >= 0 && t <= 1)\n\t\t\troots = roots.concat(numberSort(result[dim]))\n\t\t})\n\n\t\tresult.values = numberSort(roots).filter(function (v, i) {\n\t\t\treturn roots.indexOf(v) === i\n\t\t})\n\n\t\treturn result\n\t}\n\n\t// 相交\n\tintersects(curve) {\n\t\tif (!curve) throw new Error('请输入 曲线 或 直线 数据.')\n\n\t\t// 直线相交\n\t\tif (curve.p1 && curve.p2) {\n\t\t\treturn this.lineIntersects(curve)\n\t\t}\n\n\t\t// 曲线相交\n\t\tif (curve instanceof DBezier) {\n\t\t\tcurve = curve.reduce()\n\t\t}\n\n\t\treturn this.curveintersects(\n\t\t\tthis.reduce(),\n\t\t\tcurve\n\t\t)\n\t}\n\n\t// 自身相交\n\tselfintersects() {\n\t\t// 简单曲线不能与其直接相邻的曲线相交, 因此对于每个线段 X，我们检查它是否与 [0:x-2][x+2:last] 相交。\n\t\tlet reduced = this.reduce(),\n\t\t\tlen     = reduced.length - 2,\n\t\t\tresults = []\n\n\t\tfor (let i = 0, result, left, right; i < len; i++) {\n\t\t\tleft   = reduced.slice(i, i + 1)\n\t\t\tright  = reduced.slice(i + 2)\n\t\t\tresult = this.curveintersects(left, right)\n\t\t\tresults.push(...result)\n\t\t}\n\t\treturn results\n\t}\n\n\t// 直线相交\n\tlineIntersects(line) {\n\t\tlet { p1, p2 } = line,\n\t\t\t{ x: x1, y: y1 } = p1,\n\t\t\t{ x: x2, y: y2 } = p2\n\t\tlet mx = min(x1, x2),\n\t\t\tmy = min(y1, y2),\n\t\t\tMX = max(x1, x2),\n\t\t\tMY = max(y1, y2)\n\t\t\n\t\tlet rootList = roots(this.points, line).filter((t) => {\n\t\t\tvar p = this.get(t)\n\t\t\treturn between(p.x, mx, MX) && between(p.y, my, MY)\n\t\t})\n\t\treturn rootList.map(t => this.get(t))\n\t\t// return rootList\n\t}\n\n\t// 曲线相交\n\tcurveintersects(c1, c2) {\n\t\tconst pairs = []\n\t\t// step 1: 配对任何重叠的片段\n\t\tc1.forEach(function (left) {\n\t\t\tc2.forEach(function (right) {\n\t\t\t\tif (left.overlaps(right)) {\n\t\t\t\t\tpairs.push({ left, right })\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\t// step 2: 对于每个配对运行收敛算法\n\t\tlet intersections = []\n\t\tpairs.forEach(function (pair) {\n\t\t\tconst result = pairiteration(pair.left, pair.right)\n\t\t\tif (result.length) {\n\t\t\t\tintersections = intersections.concat(result)\n\t\t\t}\n\t\t})\n\t\treturn intersections\n\t}\n\n\tsimple() {\n\t\tif (this.order === 3) {\n\t\t\tconst a1 = angle(this.points[0], this.points[3], this.points[1])\n\t\t\tconst a2 = angle(this.points[0], this.points[3], this.points[2])\n\t\t\tif ((a1 > 0 && a2 < 0) || (a1 < 0 && a2 > 0)) return false\n\t\t}\n\t\tconst n1 = this.normal(0)\n\t\tconst n2 = this.normal(1)\n\t\tlet s = n1.x * n2.x + n1.y * n2.y\n\t\t\tif (this._3d) {\n\t\t\ts += n1.z * n2.z\n\t\t}\n\t\treturn abs(acos(s)) < PI / 3\n\t}\n\n\treduce() {\n\t\t// 详细检查变量类型\n\t\tlet i,\n\t\t\tt1    = 0,\n\t\t\tt2    = 0,\n\t\t\tstep  = 0.01,\n\t\t\tpass1 = [],\n\t\t\tpass2 = [],\n\t\t\tsegment\n\n\t\t// 第一步: 极值分割\n\t\tlet extrema = this.extrema().values\n\n\t\tif (extrema.indexOf(0) === -1) extrema = [0].concat(extrema)\n\t\tif (extrema.indexOf(1) === -1) extrema.push(1)\n\n\t\tfor (t1 = extrema[0], i = 1; i < extrema.length; i++) {\n\t\t\tt2 = extrema[i]\n\t\t\tsegment = this.split(t1, t2)\n\t\t\tsegment._t1 = t1\n\t\t\tsegment._t2 = t2\n\t\t\tpass1.push(segment)\n\t\t\tt1 = t2\n\t\t}\n\n\t\t// 第二步: 进一步将这些段减少为简单段\n\t\tpass1.forEach(p1 => {\n\t\t\tt1 = 0\n\t\t\tt2 = 0\n\t\t\twhile (t2 <= 1) {\n\t\t\t\tfor (t2 = t1 + step; t2 <= 1 + step; t2 += step) {\n\t\t\t\t\tsegment = p1.split(t1, t2)\n\t\t\t\t\tif (!segment.simple()) {\n\t\t\t\t\t\tt2 -= step\n\t\t\t\t\t\tif (abs(t1 - t2) < step) {\n\t\t\t\t\t\t\treturn []\t\t\t\t\t// 无法再减少\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegment = p1.split(t1, t2)\n\t\t\t\t\t\tsegment._t1 = map(t1, 0, 1, p1._t1, p1._t2)\n\t\t\t\t\t\tsegment._t2 = map(t2, 0, 1, p1._t1, p1._t2)\n\t\t\t\t\t\tpass2.push(segment)\n\t\t\t\t\t\tt1 = t2\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (t1 < 1) {\n\t\t\t\tsegment = p1.split(t1, 1)\n\t\t\t\tsegment._t1 = map(t1, 0, 1, p1._t1, p1._t2)\n\t\t\t\tsegment._t2 = p1._t2\n\t\t\t\tpass2.push(segment)\n\t\t\t}\n\t\t})\n\t\treturn pass2\n\t}\n\n\tsplit(t1, t2) {\n\t\t// 捷径\n\t\tif (t1 === 0 && !!t2) {\n\t\t\treturn this.split(t2).left\n\t\t}\n\t\tif (t2 === 1) {\n\t\t\treturn this.split(t1).right\n\t\t}\n\n\t\t// 没有捷径：使用 \"de Casteljau\" 算法\n\t\tconst q = this.hull(t1)\n\t\tconst result = {\n\t\t\tleft: this.order === 2\n\t\t\t\t? new DBezier([q[0], q[3], q[5]])\n\t\t\t\t: new DBezier([q[0], q[4], q[7], q[9]]),\n\t\t\tright: this.order === 2\n\t\t\t\t? new DBezier([q[5], q[4], q[2]])\n\t\t\t\t: new DBezier([q[9], q[8], q[6], q[3]]),\n\t\t\tspan: q,\n\t\t}\n\n\t\t// 确保我们绑定了 _t1/_t2 信息\n\t\tresult.left._t1  = map(0,  0, 1, this._t1, this._t2)\n\t\tresult.left._t2  = map(t1, 0, 1, this._t1, this._t2)\n\t\tresult.right._t1 = map(t1, 0, 1, this._t1, this._t2)\n\t\tresult.right._t2 = map(1,  0, 1, this._t1, this._t2)\n\n\t\t// t2不存在\n\t\tif (!t2) return result\n\n\t\t// t2存在 再拆分\n\t\tt2 = map(t2, t1, 1, 0, 1)\n\t\treturn result.right.split(t2).left\n\t}\n\n\thull(t) {\n\t\tlet p   = this.points,\n\t\t\t_p  = [],\n\t\t\tq   = [],\n\t\t\tidx = 0\n\t\tq[idx++] = p[0]\n\t\tq[idx++] = p[1]\n\t\tq[idx++] = p[2]\n\t\tif (this.order === 3) {\n\t\t\tq[idx++] = p[3]\n\t\t}\n\t\t// 我们在每次迭代的所有点之间进行 lerp，直到剩下 1 个点.\n\t\twhile (p.length > 1) {\n\t\t\t_p = []\n\t\t\tfor (let i = 0, pt, l = p.length - 1; i < l; i++) {\n\t\t\t\tpt = lerp(t, p[i], p[i + 1])\n\t\t\t\tq[idx++] = pt\n\t\t\t\t_p.push(pt)\n\t\t\t}\n\t\t\tp = _p\n\t\t}\n\t\treturn q\n\t}\n\n\t// 法线\n\tnormal(t) {\n\t\tconst d = this.derivative(t)\n\t\tconst q = sqrt(d.x * d.x + d.y * d.y)\n\t\treturn { x: -d.y / q, y: d.x / q }\n\t}\n\n}\nexport default DBezier\n"],"names":["abs","cos","sin","acos","atan2","sqrt","pow","PI","Math","crt","v","TAU","ZERO","x","y","Tvalues","Cvalues","epsilon","nMax","Number","MAX_SAFE_INTEGER","nMin","MIN_SAFE_INTEGER","getClass","element","Object","prototype","toString","call","slice","derive","points","dpoints","p","len","length","last","list","j","dpt","push","compute","t","order","mt","p0","p1","p2","p3","mt2","t2","a","b","c","d","ret","derivativeFn","z","sum","i","getArc","l","getMinMax","curve","min","max","indexOf","concat","get","mid","size","roots","line","aligned","align","reduce","pa","pb","pc","pd","q","q2","discriminant","u1","v1","x1","x2","x3","mp3","mp33","r","cosphi","phi","crtr","t1","filter","sd","droots","m1","m2","v2","numberSort","sort","between","m","M","approximately","precision","map","ds","de","ts","te","d1","d2","tx","ty","pairiteration","c1","c2","c1b","bbox","c2b","threshold","_t1","_t2","cc1","split","cc2","pairs","left","right","pair","bboxoverlap","results","forEach","b1","b2","dims","dim","lerp","undefined","angle","o","dx1","dy1","dx2","dy2","cross","dot","DBezier","constructor","coords","console","log","version","args","Array","from","arguments","coordlen","newArgs","point","Error","_lut","update","idx","derivative","bind","dderivative","extrema","result","overlaps","lbbox","tbbox","mfn","values","intersects","lineIntersects","curveintersects","selfintersects","reduced","y1","y2","mx","my","MX","MY","rootList","intersections","simple","a1","a2","n1","normal","n2","s","_3d","step","pass1","pass2","segment","hull","span","_p","pt"],"mappings":";;;;;;;;EAAA;EACA,MAAM;EAAEA,OAAAA,KAAF;EAAOC,OAAAA,KAAP;EAAYC,OAAAA,KAAZ;EAAiBC,QAAAA,MAAjB;EAAuBC,EAAAA,KAAvB;EAA8BC,QAAAA,MAA9B;EAAoCC,EAAAA,GAApC;EAAyCC,MAAAA;EAAzC,IAAgDC,IAAtD;;EAGA,SAASC,GAAT,CAAaC,CAAb,EAAgB;EACf,SAAOA,CAAC,GAAG,CAAJ,GAAO,CAACJ,GAAG,CAAC,CAACI,CAAF,EAAK,IAAI,CAAT,CAAX,GAAwBJ,GAAG,CAACI,CAAD,EAAI,IAAI,CAAR,CAAlC;EACA;;;EAGD,MAAMC,GAAG,GAAG,IAAIJ,IAAhB;;EAGA,MAAMK,IAAI,GAAG;EAAEC,EAAAA,CAAC,EAAE,CAAL;EAAQC,EAAAA,CAAC,EAAE;EAAX,CAAb;;EAGA,MAAMC,OAAO,GAAG,CACf,CAAC,0CADc,EAEf,0CAFe,EAGf,CAAC,0CAHc,EAIf,0CAJe,EAKf,CAAC,0CALc,EAMf,0CANe,EAOf,CAAC,0CAPc,EAQf,0CARe,EASf,CAAC,0CATc,EAUf,0CAVe,EAWf,CAAC,0CAXc,EAYf,0CAZe,EAaf,CAAC,0CAbc,EAcf,0CAde,EAef,CAAC,0CAfc,EAgBf,0CAhBe,EAiBf,CAAC,0CAjBc,EAkBf,0CAlBe,EAmBf,CAAC,0CAnBc,EAoBf,0CApBe,EAqBf,CAAC,0CArBc,EAsBf,0CAtBe,EAuBf,CAAC,0CAvBc,EAwBf,0CAxBe,CAAhB;;EA4BA,MAAMC,OAAO,GAAG,CACf,0CADe,EAEf,0CAFe,EAGf,0CAHe,EAIf,0CAJe,EAKf,yCALe,EAMf,yCANe,EAOf,0CAPe,EAQf,0CARe,EASf,0CATe,EAUf,0CAVe,EAWf,0CAXe,EAYf,0CAZe,EAaf,yCAbe,EAcf,yCAde,EAef,0CAfe,EAgBf,0CAhBe,EAiBf,0CAjBe,EAkBf,0CAlBe,EAmBf,0CAnBe,EAoBf,0CApBe,EAqBf,0CArBe,EAsBf,0CAtBe,EAuBf,0CAvBe,EAwBf,0CAxBe,CAAhB;;EA4BA,MAAMC,OAAO,GAAG,QAAhB;;EAGA,MAAMC,IAAI,GAAGC,MAAM,CAACC,gBAAP,IAA2B,gBAAxC;EACA,MAAMC,IAAI,GAAGF,MAAM,CAACG,gBAAP,IAA2B,CAAC,gBAAzC;;EAGO,MAAMC,QAAQ,GAAGC,OAAO,IAAI;EAClC,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,OAA/B,EAAwCK,KAAxC,CAA8C,CAA9C,EAAiD,CAAC,CAAlD,CAAP;EACA,CAFM;;EAgCA,MAAMC,MAAM,GAAGC,MAAM,IAAI;EAC/B,QAAMC,OAAO,GAAG,EAAhB;;EACA,OAAK,IAAIC,CAAC,GAAGF,MAAR,EAAgBG,GAAG,GAAGD,CAAC,CAACE,MAAxB,EAAgCC,IAAI,GAAGF,GAAG,GAAG,CAAlD,EAAqDA,GAAG,GAAG,CAA3D,EAA8DA,GAAG,IAAIE,IAAI,EAAzE,EAA6E;EAC5E,UAAMC,IAAI,GAAG,EAAb;;EACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAApB,EAA0BE,CAAC,EAA3B,EAA+B;EAC9B,UAAIC,GAAG,GAAG;EACT1B,QAAAA,CAAC,EAAEuB,IAAI,IAAIH,CAAC,CAACK,CAAC,GAAG,CAAL,CAAD,CAASzB,CAAT,GAAaoB,CAAC,CAACK,CAAD,CAAD,CAAKzB,CAAtB,CADE;EAETC,QAAAA,CAAC,EAAEsB,IAAI,IAAIH,CAAC,CAACK,CAAC,GAAG,CAAL,CAAD,CAASxB,CAAT,GAAamB,CAAC,CAACK,CAAD,CAAD,CAAKxB,CAAtB;EAFE,OAAV;EAIAuB,MAAAA,IAAI,CAACG,IAAL,CAAUD,GAAV;EACA;;EACDP,IAAAA,OAAO,CAACQ,IAAR,CAAaH,IAAb;EACAJ,IAAAA,CAAC,GAAGI,IAAJ;EACA;;EACD,SAAOL,OAAP;EACA,CAfM;;EAkBA,MAAMS,OAAO,GAAG,CAACC,CAAC,GAAG,CAAL,EAAQX,MAAR,KAAmB;EACzC;EACA,MAAIW,CAAC,KAAK,CAAV,EAAa;EACZX,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUW,CAAV,GAAc,CAAd;EACA,WAAOX,MAAM,CAAC,CAAD,CAAb;EACA;;EAED,QAAMY,KAAK,GAAGZ,MAAM,CAACI,MAAP,GAAgB,CAA9B;;EAEA,MAAIO,CAAC,KAAK,CAAV,EAAa;EACZX,IAAAA,MAAM,CAACY,KAAD,CAAN,CAAcD,CAAd,GAAkB,CAAlB;EACA,WAAOX,MAAM,CAACY,KAAD,CAAb;EACA;;EAED,QAAMC,EAAE,GAAG,IAAIF,CAAf;EACA,MAAIT,CAAC,GAAGF,MAAR;EAAA,MACC,CAAEc,EAAF,EAAMC,EAAN,EAAUC,EAAV,EAAcC,EAAd,IAAqBf,CADtB;EAGA,MAAIgB,GAAG,GAAGL,EAAE,IAAI,CAAhB;EAAA,MACCM,EAAE,GAAIR,CAAC,IAAK,CADb;EAAA,MAECS,CAFD;EAAA,MAEIC,CAFJ;EAAA,MAEOC,CAFP;EAAA,MAEUC,CAAC,GAAG,CAFd,CAlByC;;EAuBzC,MAAIX,KAAK,KAAK,CAAd,EAAiB;EAChBV,IAAAA,CAAC,GAAI,CAACY,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAanC,IAAb,CAAL;EACAuC,IAAAA,CAAC,GAAIF,GAAL;EACAG,IAAAA,CAAC,GAAIR,EAAE,GAAGF,CAAL,GAAS,CAAd;EACAW,IAAAA,CAAC,GAAIH,EAAL;EACAF,IAAAA,EAAE,GAAGf,CAAC,CAAC,CAAD,CAAN;EACA,GAND,MAMO,IAAIU,KAAK,KAAK,CAAd,EAAiB;EACvBQ,IAAAA,CAAC,GAAGF,GAAG,GAAGL,EAAV;EACAQ,IAAAA,CAAC,GAAGH,GAAG,GAAGP,CAAN,GAAU,CAAd;EACAW,IAAAA,CAAC,GAAGT,EAAE,GAAGM,EAAL,GAAU,CAAd;EACAI,IAAAA,CAAC,GAAGZ,CAAC,GAAIQ,EAAT;EACA;;EAED,QAAMK,GAAG,GAAG;EACX1C,IAAAA,CAAC,EAAEsC,CAAC,GAAGN,EAAE,CAAChC,CAAP,GAAWuC,CAAC,GAAGN,EAAE,CAACjC,CAAlB,GAAsBwC,CAAC,GAAGN,EAAE,CAAClC,CAA7B,GAAiCyC,CAAC,GAAGN,EAAE,CAACnC,CADhC;EAEXC,IAAAA,CAAC,EAAEqC,CAAC,GAAGN,EAAE,CAAC/B,CAAP,GAAWsC,CAAC,GAAGN,EAAE,CAAChC,CAAlB,GAAsBuC,CAAC,GAAGN,EAAE,CAACjC,CAA7B,GAAiCwC,CAAC,GAAGN,EAAE,CAAClC,CAFhC;EAGX4B,IAAAA;EAHW,GAAZ;EAMA,SAAOa,GAAP;EACA,CA3CM;;EA8CA,MAAMpB,MAAM,GAAGqB,YAAY,IAAI;EACrC,QAAMC,CAAC,GAAG,EAAV;EAAA,QACCvB,GAAG,GAAGnB,OAAO,CAACoB,MADf;EAGA,MAAIuB,GAAG,GAAG,CAAV;;EAEA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWjB,CAAhB,EAAmBiB,CAAC,GAAGzB,GAAvB,EAA4ByB,CAAC,EAA7B,EAAiC;EAChCjB,IAAAA,CAAC,GAAGe,CAAC,GAAG1C,OAAO,CAAC4C,CAAD,CAAX,GAAiBF,CAArB;EACAC,IAAAA,GAAG,IAAI1C,OAAO,CAAC2C,CAAD,CAAP,GAAaC,MAAM,CAAClB,CAAD,EAAIc,YAAJ,CAA1B;EACA;;EAED,SAAOC,CAAC,GAAGC,GAAX;EACA,CAZM;;EAeA,MAAME,MAAM,GAAG,CAAClB,CAAD,EAAIc,YAAJ,KAAqB;EAC1C,QAAMF,CAAC,GAAGE,YAAY,CAACd,CAAD,CAAtB;EACA,MAAImB,CAAC,GAAGP,CAAC,CAACzC,CAAF,IAAO,CAAP,GAAWyC,CAAC,CAACxC,CAAF,IAAO,CAA1B;EACA,SAAOT,MAAI,CAACwD,CAAD,CAAX;EACA,CAJM;;EAOA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQT,CAAR,EAAWjB,IAAX,KAAoB;EAC5C,MAAI,CAACA,IAAL,EAAW,OAAO;EAAE2B,IAAAA,GAAG,EAAE,CAAP;EAAUC,IAAAA,GAAG,EAAE;EAAf,GAAP;EAEX,MAAID,GAAG,GAAG9C,IAAV;EAAA,MACC+C,GAAG,GAAG5C,IADP;EAAA,MAECqB,CAFD;EAAA,MAEIW,CAFJ;;EAGA,MAAIhB,IAAI,CAAC6B,OAAL,CAAa,CAAb,MAAoB,CAAC,CAAzB,EAA4B;EAC3B7B,IAAAA,IAAI,GAAG,CAAC,CAAD,EAAI8B,MAAJ,CAAW9B,IAAX,CAAP;EACA;;EACD,MAAIA,IAAI,CAAC6B,OAAL,CAAa,CAAb,MAAoB,CAAC,CAAzB,EAA4B;EAC3B7B,IAAAA,IAAI,CAACG,IAAL,CAAU,CAAV;EACA;;EACD,OAAK,IAAImB,CAAC,GAAG,CAAR,EAAWzB,GAAG,GAAGG,IAAI,CAACF,MAA3B,EAAmCwB,CAAC,GAAGzB,GAAvC,EAA4CyB,CAAC,EAA7C,EAAiD;EAChDjB,IAAAA,CAAC,GAAGL,IAAI,CAACsB,CAAD,CAAR;EACAN,IAAAA,CAAC,GAAGU,KAAK,CAACK,GAAN,CAAU1B,CAAV,CAAJ;;EACA,QAAIW,CAAC,CAACC,CAAD,CAAD,GAAOU,GAAX,EAAgB;EACfA,MAAAA,GAAG,GAAGX,CAAC,CAACC,CAAD,CAAP;EACA;;EACD,QAAID,CAAC,CAACC,CAAD,CAAD,GAAOW,GAAX,EAAgB;EACfA,MAAAA,GAAG,GAAGZ,CAAC,CAACC,CAAD,CAAP;EACA;EACD;;EACD,SAAO;EACNU,IAAAA,GADM;EAENC,IAAAA,GAFM;EAGNI,IAAAA,GAAG,EAAG,CAACL,GAAG,GAAGC,GAAP,IAAc,CAHd;EAINK,IAAAA,IAAI,EAAEL,GAAG,GAAGD;EAJN,GAAP;EAMA,CA5BM;;EA+BA,MAAMO,KAAK,GAAG,CAACxC,MAAD,EAASyC,IAAT,KAAkB;EACtCA,EAAAA,IAAI,GAAGA,IAAI,IAAI;EAAE1B,IAAAA,EAAE,EAAE;EAAEjC,MAAAA,CAAC,EAAE,CAAL;EAAQC,MAAAA,CAAC,EAAE;EAAX,KAAN;EAAsBiC,IAAAA,EAAE,EAAE;EAAElC,MAAAA,CAAC,EAAE,CAAL;EAAQC,MAAAA,CAAC,EAAE;EAAX;EAA1B,GAAf;EAEA,QAAM2D,OAAO,GAAGC,KAAK,CAAC3C,MAAD,EAASyC,IAAT,CAArB;;EACA,QAAMG,MAAM,GAAIjC,CAAC,IAAI,KAAKA,CAAL,IAAUA,CAAC,IAAI,CAApC;;EAEA,MAAIkC,EAAE,GAAGH,OAAO,CAAC,CAAD,CAAP,CAAW3D,CAApB;EAAA,MACC+D,EAAE,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAW3D,CADjB;EAAA,MAECgE,EAAE,GAAGL,OAAO,CAAC,CAAD,CAAP,CAAW3D,CAFjB;EAAA,MAGCiE,EAAE,GAAGN,OAAO,CAAC,CAAD,CAAP,CAAW3D,CAHjB;EAKA,MAAIwC,CAAC,GAAG,CAACsB,EAAD,GAAM,IAAIC,EAAV,GAAe,IAAIC,EAAnB,GAAwBC,EAAhC;EAAA,MACC5B,CAAC,GAAG,IAAIyB,EAAJ,GAAS,IAAIC,EAAb,GAAkB,IAAIC,EAD3B;EAAA,MAEC1B,CAAC,GAAG,CAAC,CAAD,GAAKwB,EAAL,GAAU,IAAIC,EAFnB;EAAA,MAGCxB,CAAC,GAAGuB,EAHL,CAXsC;;EAiBtC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEC;;EACAzB,EAAAA,CAAC,IAAIG,CAAL;EACAF,EAAAA,CAAC,IAAIE,CAAL;EACAD,EAAAA,CAAC,IAAIC,CAAL;EAEA,MAAIrB,CAAC,GAAI,CAAC,IAAImB,CAAJ,GAAQD,CAAC,IAAI,CAAd,IAAmB,CAA5B;EAAA,MACCH,EAAE,GAAGf,CAAC,GAAG,CADV;EAAA,MAEC+C,CAAC,GAAI,CAAC,IAAI7B,CAAC,IAAI,CAAT,GAAa,IAAIA,CAAJ,GAAQC,CAArB,GAAyB,KAAKC,CAA/B,IAAoC,EAF1C;EAAA,MAGC4B,EAAE,GAAGD,CAAC,GAAG,CAHV;EAAA,MAICE,YAAY,GAAGD,EAAE,IAAI,CAAN,GAAUjC,EAAE,IAAI,CAJhC;EAMA,MAAImC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB;;EACA,MAAIL,YAAY,GAAG,CAAnB,EAAsB;EACrB,QAAIM,GAAG,GAAM,CAACvD,CAAD,GAAK,CAAlB;EAAA,QACCwD,IAAI,GAAKD,GAAG,GAAGA,GAAN,GAAYA,GADtB;EAAA,QAECE,CAAC,GAAQrF,MAAI,CAACoF,IAAD,CAFd;EAAA,QAGC/C,CAAC,GAAQ,CAACsC,CAAD,IAAM,IAAIU,CAAV,CAHV;EAAA,QAICC,MAAM,GAAGjD,CAAC,GAAG,CAAC,CAAL,GAAS,CAAC,CAAV,GAAcA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAJpC;EAAA,QAKCkD,GAAG,GAAMzF,MAAI,CAACwF,MAAD,CALd;EAAA,QAMCE,IAAI,GAAKpF,GAAG,CAACiF,CAAD,CANb;EAAA,QAOCI,EAAE,GAAO,IAAID,IAPd;EAQAR,IAAAA,EAAE,GAAGS,EAAE,GAAG7F,KAAG,CAAC2F,GAAG,GAAG,CAAP,CAAR,GAAoBzC,CAAC,GAAG,CAA7B;EACAmC,IAAAA,EAAE,GAAGQ,EAAE,GAAG7F,KAAG,CAAC,CAAC2F,GAAG,GAAGjF,GAAP,IAAc,CAAf,CAAR,GAA4BwC,CAAC,GAAG,CAArC;EACAoC,IAAAA,EAAE,GAAGO,EAAE,GAAG7F,KAAG,CAAC,CAAC2F,GAAG,GAAG,IAAIjF,GAAX,IAAkB,CAAnB,CAAR,GAAgCwC,CAAC,GAAG,CAAzC;EACA,WAAO,CAACkC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaQ,MAAb,CAAoBpB,MAApB,CAAP;EACA,GAbD,MAaO,IAAIO,YAAY,KAAK,CAArB,EAAwB;EAC9BC,IAAAA,EAAE,GAAGF,EAAE,GAAG,CAAL,GAASxE,GAAG,CAAC,CAACwE,EAAF,CAAZ,GAAoB,CAACxE,GAAG,CAACwE,EAAD,CAA7B;EACAI,IAAAA,EAAE,GAAG,IAAIF,EAAJ,GAAShC,CAAC,GAAG,CAAlB;EACAmC,IAAAA,EAAE,GAAG,CAACH,EAAD,GAAMhC,CAAC,GAAG,CAAf;EACA,WAAO,CAACkC,EAAD,EAAKC,EAAL,EAASS,MAAT,CAAgBpB,MAAhB,CAAP;EACA,GALM,MAKA;EACN,UAAMqB,EAAE,GAAG3F,MAAI,CAAC6E,YAAD,CAAf;EACAC,IAAAA,EAAE,GAAG1E,GAAG,CAAC,CAACwE,EAAD,GAAMe,EAAP,CAAR;EACAZ,IAAAA,EAAE,GAAG3E,GAAG,CAACwE,EAAE,GAAGe,EAAN,CAAR;EACA,WAAO,CAACb,EAAE,GAAGC,EAAL,GAAUjC,CAAC,GAAG,CAAf,EAAkB4C,MAAlB,CAAyBpB,MAAzB,CAAP;EACA;EACD,CArEM;;EAwEA,MAAMsB,MAAM,GAAGhE,CAAC,IAAI;EAC1B,MAAI,CAACkB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYpB,CAAhB,CAD0B;;EAG1B,MAAIA,CAAC,CAACE,MAAF,KAAa,CAAjB,EAAoB;EACnB,QAAImB,CAAC,GAAGH,CAAC,GAAG,IAAIC,CAAR,GAAYC,CAApB;;EACA,QAAIC,CAAC,KAAK,CAAV,EAAa;EACZ,UAAI4C,EAAE,GAAG,CAAC7F,MAAI,CAAC+C,CAAC,GAAGA,CAAJ,GAAQD,CAAC,GAAGE,CAAb,CAAd;EAAA,UACC8C,EAAE,GAAG,CAAChD,CAAD,GAAKC,CADX;EAAA,UAECgC,EAAE,GAAG,EAAEc,EAAE,GAAGC,EAAP,IAAa7C,CAFnB;EAAA,UAGC8C,EAAE,GAAG,EAAE,CAACF,EAAD,GAAMC,EAAR,IAAc7C,CAHpB;EAIA,aAAO,CAAC8B,EAAD,EAAKgB,EAAL,CAAP;EACA,KAND,MAMO,IAAIhD,CAAC,KAAKC,CAAN,IAAWC,CAAC,KAAK,CAArB,EAAwB;EAC9B,aAAO,CAAC,CAAC,IAAIF,CAAJ,GAAQC,CAAT,KAAe,KAAKD,CAAC,GAAGC,CAAT,CAAf,CAAD,CAAP;EACA;;EACD,WAAO,EAAP;EACA,GAfyB;;;EAkB1B,MAAIpB,CAAC,CAACE,MAAF,KAAa,CAAjB,EAAoB;EACnB,QAAIgB,CAAC,KAAKC,CAAV,EAAa;EACZ,aAAO,CAACD,CAAC,IAAIA,CAAC,GAAGC,CAAR,CAAF,CAAP;EACA;;EACD,WAAO,EAAP;EACA;;EAED,SAAO,EAAP;EACA,CA1BM;;EA6BA,MAAMiD,UAAU,GAAGhE,IAAI,IAAI;EACjC,SAAOA,IAAI,CAACiE,IAAL,CAAU,CAACnD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAxB,CAAP;EACA,CAFM;;EAKA,MAAMmD,OAAO,GAAG,CAAC7F,CAAD,EAAI8F,CAAJ,EAAOC,CAAP,KAAa;EAChC,SAASD,CAAC,IAAI9F,CAAL,IAAUA,CAAC,IAAI+F,CAAhB,IAAsBC,aAAa,CAAChG,CAAD,EAAI8F,CAAJ,CAAnC,IAA6CE,aAAa,CAAChG,CAAD,EAAI+F,CAAJ,CAAlE;EACH,CAFM;;EAKA,MAAMC,aAAa,GAAG,CAACvD,CAAD,EAAIC,CAAJ,EAAOuD,SAAP,KAAqB;EAC9C,SAAO3G,KAAG,CAACmD,CAAC,GAAGC,CAAL,CAAH,KAAeuD,SAAS,IAAI1F,OAA5B,CAAP;EACH,CAFM;;EAKA,MAAM2F,GAAG,GAAG,CAAClG,CAAD,EAAImG,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,KAAuB;EACzC,MAAIC,EAAE,GAAGH,EAAE,GAAGD,EAAd;EAAA,MACCK,EAAE,GAAGF,EAAE,GAAGD,EADX;EAAA,MAECX,EAAE,GAAG1F,CAAC,GAAImG,EAFX;EAAA,MAGCnB,CAAC,GAAIU,EAAE,GAAGa,EAHX;EAKA,SAAOF,EAAE,GAAGG,EAAE,GAAGxB,CAAjB;EACA,CAPM;;EAUA,MAAMhB,KAAK,GAAG,CAAC3C,MAAD,EAASyC,IAAT,KAAkB;EACtC,MAAI;EAAE1B,IAAAA,EAAF;EAAMC,IAAAA;EAAN,MAAayB,IAAjB;EAAA,MACC2C,EAAE,GAAGrE,EAAE,CAACjC,CADT;EAAA,MAECuG,EAAE,GAAGtE,EAAE,CAAChC,CAFT;EAAA,MAGCqC,CAAC,GAAI,CAAC/C,KAAK,CAAC2C,EAAE,CAACjC,CAAH,GAAOsG,EAAR,EAAYrE,EAAE,CAAClC,CAAH,GAAOsG,EAAnB,CAHZ;EAKA,SAAOpF,MAAM,CAAC6E,GAAP,CAAWlG,CAAC,IAAI;EACtB,WAAO;EACNG,MAAAA,CAAC,EAAE,CAACH,CAAC,CAACG,CAAF,GAAMsG,EAAP,IAAalH,KAAG,CAACkD,CAAD,CAAhB,GAAsB,CAACzC,CAAC,CAACI,CAAF,GAAMsG,EAAP,IAAalH,KAAG,CAACiD,CAAD,CADnC;EAENrC,MAAAA,CAAC,EAAE,CAACJ,CAAC,CAACG,CAAF,GAAMsG,EAAP,IAAajH,KAAG,CAACiD,CAAD,CAAhB,GAAsB,CAACzC,CAAC,CAACI,CAAF,GAAMsG,EAAP,IAAanH,KAAG,CAACkD,CAAD;EAFnC,KAAP;EAIA,GALM,CAAP;EAMA,CAZM;;EAeA,MAAMkE,aAAa,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;EACxC,MAAIC,GAAG,GAAGF,EAAE,CAACG,IAAH,EAAV;EAAA,MACCC,GAAG,GAAGH,EAAE,CAACE,IAAH,EADP;EAAA,MAEC/B,CAAC,GAAK,MAFP;EAAA,MAGCiC,SAAS,GAAG,GAHb;;EAKA,MACCH,GAAG,CAAC3G,CAAJ,CAAMyD,IAAN,GAAakD,GAAG,CAAC1G,CAAJ,CAAMwD,IAAnB,GAA0BqD,SAA1B,IACAD,GAAG,CAAC7G,CAAJ,CAAMyD,IAAN,GAAaoD,GAAG,CAAC5G,CAAJ,CAAMwD,IAAnB,GAA0BqD,SAF3B,EAGE;EACD,WAAO,CACN,CAAGjC,CAAC,IAAI4B,EAAE,CAACM,GAAH,GAASN,EAAE,CAACO,GAAhB,CAAF,GAA0B,CAA3B,GAAgC,CAAjC,IAAsCnC,CAAtC,GAA0C,GAA1C,GAAgD,CAAGA,CAAC,IAAI6B,EAAE,CAACK,GAAH,GAASL,EAAE,CAACM,GAAhB,CAAF,GAA0B,CAA3B,GAAgC,CAAjC,IAAsCnC,CADhF,CAAP;EAGA;;EAED,MAAIoC,GAAG,GAAGR,EAAE,CAACS,KAAH,CAAS,GAAT,CAAV;EAAA,MACCC,GAAG,GAAGT,EAAE,CAACQ,KAAH,CAAS,GAAT,CADP;EAAA,MAECE,KAAK,GAAG,CACP;EAAEC,IAAAA,IAAI,EAAEJ,GAAG,CAACI,IAAZ;EAAmBC,IAAAA,KAAK,EAAEH,GAAG,CAACE;EAA9B,GADO,EAEP;EAAEA,IAAAA,IAAI,EAAEJ,GAAG,CAACI,IAAZ;EAAmBC,IAAAA,KAAK,EAAEH,GAAG,CAACG;EAA9B,GAFO,EAGP;EAAED,IAAAA,IAAI,EAAEJ,GAAG,CAACK,KAAZ;EAAmBA,IAAAA,KAAK,EAAEH,GAAG,CAACG;EAA9B,GAHO,EAIP;EAAED,IAAAA,IAAI,EAAEJ,GAAG,CAACK,KAAZ;EAAmBA,IAAAA,KAAK,EAAEH,GAAG,CAACE;EAA9B,GAJO,CAFT;EASAD,EAAAA,KAAK,GAAGA,KAAK,CAAClC,MAAN,CAAaqC,IAAI,IAAI;EAC5B,WAAOC,WAAW,CAACD,IAAI,CAACF,IAAL,CAAUT,IAAV,EAAD,EAAmBW,IAAI,CAACD,KAAL,CAAWV,IAAX,EAAnB,CAAlB;EACA,GAFO,CAAR;EAIA,MAAIa,OAAO,GAAG,EAAd;EAEA,MAAI,CAACL,KAAK,CAAC9F,MAAX,EAAmB,OAAOmG,OAAP;EAEnBL,EAAAA,KAAK,CAACM,OAAN,CAAc,UAAUH,IAAV,EAAgB;EAC7BE,IAAAA,OAAO,GAAGA,OAAO,CAACnE,MAAR,CAAekD,aAAa,CAACe,IAAI,CAACF,IAAN,EAAYE,IAAI,CAACD,KAAjB,CAA5B,CAAV;EACA,GAFD;EAIAG,EAAAA,OAAO,GAAGA,OAAO,CAACvC,MAAR,CAAe,UAAUrF,CAAV,EAAaiD,CAAb,EAAgB;EACxC,WAAO2E,OAAO,CAACpE,OAAR,CAAgBxD,CAAhB,MAAuBiD,CAA9B;EACA,GAFS,CAAV;EAIA,SAAO2E,OAAP;EACA,CAzCM;EA2CA,MAAMD,WAAW,GAAG,CAACG,EAAD,EAAKC,EAAL,KAAY;EACtC,MAAIC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,CAAX;EAAA,MACCxG,GAAG,GAAIwG,IAAI,CAACvG,MADb;EAAA,MAECwG,GAFD;EAAA,MAEM9E,CAFN;EAAA,MAESnB,CAFT;EAAA,MAEYY,CAFZ;;EAIA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,GAApB,EAAyByB,CAAC,EAA1B,EAA8B;EAC7BgF,IAAAA,GAAG,GAAGD,IAAI,CAAC/E,CAAD,CAAV;EACAE,IAAAA,CAAC,GAAK2E,EAAE,CAACG,GAAD,CAAF,CAAQtE,GAAd;EACA3B,IAAAA,CAAC,GAAK+F,EAAE,CAACE,GAAD,CAAF,CAAQtE,GAAd;EACAf,IAAAA,CAAC,GAAK,CAACkF,EAAE,CAACG,GAAD,CAAF,CAAQrE,IAAR,GAAemE,EAAE,CAACE,GAAD,CAAF,CAAQrE,IAAxB,IAAgC,CAAtC;EACA,QAAItE,KAAG,CAAC6D,CAAC,GAAGnB,CAAL,CAAH,IAAcY,CAAlB,EAAqB,OAAO,KAAP;EACrB;;EACD,SAAO,IAAP;EACA,CAbM;EAeA,MAAMsF,IAAI,GAAG,CAAClD,CAAD,EAAIN,EAAJ,EAAQgB,EAAR,KAAe;EAClC,MAAI7C,GAAG,GAAG;EACT1C,IAAAA,CAAC,EAAEuE,EAAE,CAACvE,CAAH,GAAO6E,CAAC,IAAIU,EAAE,CAACvF,CAAH,GAAOuE,EAAE,CAACvE,CAAd,CADF;EAETC,IAAAA,CAAC,EAAEsE,EAAE,CAACtE,CAAH,GAAO4E,CAAC,IAAIU,EAAE,CAACtF,CAAH,GAAOsE,EAAE,CAACtE,CAAd;EAFF,GAAV;;EAIA,MAAIsE,EAAE,CAAC3B,CAAH,KAASoF,SAAT,IAAsBzC,EAAE,CAAC3C,CAAH,KAASoF,SAAnC,EAA8C;EAC7CtF,IAAAA,GAAG,CAACE,CAAJ,GAAQ2B,EAAE,CAAC3B,CAAH,GAAOiC,CAAC,IAAIU,EAAE,CAAC3C,CAAH,GAAO2B,EAAE,CAAC3B,CAAd,CAAhB;EACA;;EACD,SAAOF,GAAP;EACA,CATM;EAWA,MAAMuF,KAAK,GAAG,UAAUC,CAAV,EAAa3D,EAAb,EAAiBgB,EAAjB,EAAqB;EACzC,MAAI4C,GAAG,GAAK5D,EAAE,CAACvE,CAAH,GAAOkI,CAAC,CAAClI,CAArB;EAAA,MACCoI,GAAG,GAAK7D,EAAE,CAACtE,CAAH,GAAOiI,CAAC,CAACjI,CADlB;EAAA,MAECoI,GAAG,GAAK9C,EAAE,CAACvF,CAAH,GAAOkI,CAAC,CAAClI,CAFlB;EAAA,MAGCsI,GAAG,GAAK/C,EAAE,CAACtF,CAAH,GAAOiI,CAAC,CAACjI,CAHlB;EAAA,MAICsI,KAAK,GAAGJ,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGC,GAJ3B;EAAA,MAKCG,GAAG,GAAKL,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGE,GAL3B;EAMA,SAAO/I,KAAK,CAACgJ,KAAD,EAAQC,GAAR,CAAZ;EACA,CARM;;ECtaP,MAAM;EAAErJ,EAAAA,GAAF;EAAOgE,EAAAA,GAAP;EAAYC,EAAAA,GAAZ;EAAiBhE,EAAAA,GAAjB;EAAsBC,EAAAA,GAAtB;EAA2BC,EAAAA,IAA3B;EAAiCE,EAAAA;EAAjC,IAA0CG,IAAhD;EACA,MAAMD,EAAE,GAAGC,IAAI,CAACD,EAAhB;EAIA;;EACA,MAAM+I,OAAN,CAAc;EACbC,EAAAA,WAAW,CAACC,MAAD,EAAS;EACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcC,OAA1B;EACA,QAAIC,IAAI,GAAGJ,MAAM,IAAIA,MAAM,CAACjB,OAAjB,GAA0BiB,MAA1B,GAAkCK,KAAK,CAACC,IAAN,CAAWC,SAAX,EAAsBlI,KAAtB,EAA7C;EAAA,QACCmI,QADD;EAAA,QACW9H,GADX,CAFmB;;EAMnB,QAAIX,QAAQ,CAACqI,IAAI,CAAC,CAAD,CAAL,CAAR,KAAsB,QAA1B,EAAoC;EACnC,YAAMK,OAAO,GAAG,EAAhB;EACAD,MAAAA,QAAQ,GAAGJ,IAAI,CAACzH,MAAhB;EACAyH,MAAAA,IAAI,CAACrB,OAAL,CAAa2B,KAAK,IAAI;EACrB,SAAC,GAAD,EAAM,GAAN,EAAW3B,OAAX,CAAmBjF,CAAC,IAAI;EACvB,cAAI/B,QAAQ,CAAC2I,KAAK,CAAC5G,CAAD,CAAN,CAAR,KAAuB,QAA3B,EAAqC2G,OAAO,CAACzH,IAAR,CAAa0H,KAAK,CAAC5G,CAAD,CAAlB;EACrC,SAFD;EAGA,OAJD;EAKAsG,MAAAA,IAAI,GAAGK,OAAP;EACA;;EAED/H,IAAAA,GAAG,GAAG0H,IAAI,CAACzH,MAAX;;EAEA,QAAI6H,QAAJ,EAAc;EACb,UAAIA,QAAQ,KAAK,CAAjB,EAAoB;EACnB,cAAM,IAAIG,KAAJ,CAAU,qBAAV,CAAN;EACA;EACD,KAJD,MAIO;EACN,UAAIjI,GAAG,KAAK,CAAZ,EAAe;EACd,cAAM,IAAIiI,KAAJ,CAAU,cAAV,CAAN;EACA;EACD;;EAED,UAAMpI,MAAM,GAAG,KAAKA,MAAL,GAAc,EAA7B;;EACA,SAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,GAApB,EAAyByB,CAAC,IAAI,CAA9B,EAAiC;EAChC,UAAIuG,KAAK,GAAG;EACXrJ,QAAAA,CAAC,EAAE+I,IAAI,CAACjG,CAAD,CADI;EAEX7C,QAAAA,CAAC,EAAE8I,IAAI,CAACjG,CAAC,GAAG,CAAL;EAFI,OAAZ;EAIA5B,MAAAA,MAAM,CAACS,IAAP,CAAY0H,KAAZ;EACA;;EAED,IAAc,KAAKvH,KAAL,GAAaZ,MAAM,CAACI,MAAP,GAAgB;EAE3C,IAAa,KAAKuG,IAAL,GAAY,CAAC,GAAD,EAAM,GAAN;EAEzB,SAAK0B,IAAL,GAAY,EAAZ,CA1CmB;;EA4CnB,SAAKxC,GAAL,GAAW,CAAX;EACA,SAAKC,GAAL,GAAW,CAAX;EAEA,SAAK8B,OAAL,GAAeA,OAAf;EAEA,SAAKU,MAAL;EACA,GAnDY;;;EAqDbjG,EAAAA,GAAG,CAAC1B,CAAD,EAAI;EACN,WAAO,KAAKD,OAAL,CAAaC,CAAb,CAAP;EACA,GAvDY;;;EAyDbwH,EAAAA,KAAK,CAACI,GAAD,EAAM;EACV,WAAO,KAAKvI,MAAL,CAAYuI,GAAZ,CAAP;EACA,GA3DY;;;EA6Db7H,EAAAA,OAAO,CAACC,CAAD,EAAI;EACV,WAAOD,OAAO,CAACC,CAAD,EAAI,KAAKX,MAAT,CAAd;EACA;;EACDsI,EAAAA,MAAM,GAAG;EACR,SAAKD,IAAL,GAAY,EAAZ;EACA,SAAKpI,OAAL,GAAeF,MAAM,CAAC,KAAKC,MAAN,CAArB,CAFQ;EAIR;;EACDI,EAAAA,MAAM,GAAG;EACR,WAAOA,MAAM,CAAC,KAAKoI,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAD,CAAb;EACA,GAvEY;;;EAyEbD,EAAAA,UAAU,CAAC7H,CAAD,EAAI;EACb,WAAOD,OAAO,CAACC,CAAD,EAAI,KAAKV,OAAL,CAAa,CAAb,CAAJ,CAAd;EACA;;EACDyI,EAAAA,WAAW,CAAC/H,CAAD,EAAI;EACd,WAAOD,OAAO,CAACC,CAAD,EAAI,KAAKV,OAAL,CAAa,CAAb,CAAJ,CAAd;EACA,GA9EY;;;EAiFbyF,EAAAA,IAAI,GAAG;EACN,UAAMiD,OAAO,GAAG,KAAKA,OAAL,EAAhB;EAAA,UACCC,MAAM,GAAG,EADV;EAEA,SAAKjC,IAAL,CAAUH,OAAV,CAAkBjF,CAAC,IAAI;EACtBqH,MAAAA,MAAM,CAACrH,CAAD,CAAN,GAAYQ,SAAS,CAAC,IAAD,EAAOR,CAAP,EAAUoH,OAAO,CAACpH,CAAD,CAAjB,CAArB;EACA,KAFD;EAGA,WAAOqH,MAAP;EACA;;EAEDC,EAAAA,QAAQ,CAAC7G,KAAD,EAAQ;EACf,QAAI8G,KAAK,GAAG,KAAKpD,IAAL,EAAZ;EAAA,QACCqD,KAAK,GAAG/G,KAAK,CAAC0D,IAAN,EADT;EAEA,WAAOY,WAAW,CAACwC,KAAD,EAAQC,KAAR,CAAlB;EACA,GA9FY;;;EAiGbJ,EAAAA,OAAO,GAAG;EACT,QAAIC,MAAM,GAAG,EAAb;EAAA,QACCpG,KAAK,GAAI,EADV;EAGA,SAAKmE,IAAL,CAAUH,OAAV,CAAkBI,GAAG,IAAI;EACxB,UAAIoC,GAAG,GAAGrK,CAAC,IAAIA,CAAC,CAACiI,GAAD,CAAhB;EAAA,UACC1G,CAAC,GAAK,KAAKD,OAAL,CAAa,CAAb,EAAgB4E,GAAhB,CAAoBmE,GAApB,CADP;;EAGAJ,MAAAA,MAAM,CAAChC,GAAD,CAAN,GAAc1C,MAAM,CAAChE,CAAD,CAApB;;EACA,UAAI,KAAKU,KAAL,KAAe,CAAnB,EAAsB;EACrBV,QAAAA,CAAC,GAAG,KAAKD,OAAL,CAAa,CAAb,EAAgB4E,GAAhB,CAAoBmE,GAApB,CAAJ;EACAJ,QAAAA,MAAM,CAAChC,GAAD,CAAN,GAAcgC,MAAM,CAAChC,GAAD,CAAN,CAAYxE,MAAZ,CAAmB8B,MAAM,CAAChE,CAAD,CAAzB,CAAd;EACA;;EACD0I,MAAAA,MAAM,CAAChC,GAAD,CAAN,GAAcgC,MAAM,CAAChC,GAAD,CAAN,CAAY5C,MAAZ,CAAmBrD,CAAC,IAAIA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAvC,CAAd;EACA6B,MAAAA,KAAK,GAAGA,KAAK,CAACJ,MAAN,CAAakC,UAAU,CAACsE,MAAM,CAAChC,GAAD,CAAP,CAAvB,CAAR;EACA,KAXD;EAaAgC,IAAAA,MAAM,CAACK,MAAP,GAAgB3E,UAAU,CAAC9B,KAAD,CAAV,CAAkBwB,MAAlB,CAAyB,UAAUrF,CAAV,EAAaiD,CAAb,EAAgB;EACxD,aAAOY,KAAK,CAACL,OAAN,CAAcxD,CAAd,MAAqBiD,CAA5B;EACA,KAFe,CAAhB;EAIA,WAAOgH,MAAP;EACA,GAvHY;;;EA0HbM,EAAAA,UAAU,CAAClH,KAAD,EAAQ;EACjB,QAAI,CAACA,KAAL,EAAY,MAAM,IAAIoG,KAAJ,CAAU,iBAAV,CAAN,CADK;;EAIjB,QAAIpG,KAAK,CAACjB,EAAN,IAAYiB,KAAK,CAAChB,EAAtB,EAA0B;EACzB,aAAO,KAAKmI,cAAL,CAAoBnH,KAApB,CAAP;EACA,KANgB;;;EASjB,QAAIA,KAAK,YAAYuF,OAArB,EAA8B;EAC7BvF,MAAAA,KAAK,GAAGA,KAAK,CAACY,MAAN,EAAR;EACA;;EAED,WAAO,KAAKwG,eAAL,CACN,KAAKxG,MAAL,EADM,EAENZ,KAFM,CAAP;EAIA,GA3IY;;;EA8IbqH,EAAAA,cAAc,GAAG;EAChB;EACA,QAAIC,OAAO,GAAG,KAAK1G,MAAL,EAAd;EAAA,QACCzC,GAAG,GAAOmJ,OAAO,CAAClJ,MAAR,GAAiB,CAD5B;EAAA,QAECmG,OAAO,GAAG,EAFX;;EAIA,SAAK,IAAI3E,CAAC,GAAG,CAAR,EAAWgH,MAAX,EAAmBzC,IAAnB,EAAyBC,KAA9B,EAAqCxE,CAAC,GAAGzB,GAAzC,EAA8CyB,CAAC,EAA/C,EAAmD;EAClDuE,MAAAA,IAAI,GAAKmD,OAAO,CAACxJ,KAAR,CAAc8B,CAAd,EAAiBA,CAAC,GAAG,CAArB,CAAT;EACAwE,MAAAA,KAAK,GAAIkD,OAAO,CAACxJ,KAAR,CAAc8B,CAAC,GAAG,CAAlB,CAAT;EACAgH,MAAAA,MAAM,GAAG,KAAKQ,eAAL,CAAqBjD,IAArB,EAA2BC,KAA3B,CAAT;EACAG,MAAAA,OAAO,CAAC9F,IAAR,CAAa,GAAGmI,MAAhB;EACA;;EACD,WAAOrC,OAAP;EACA,GA3JY;;;EA8Jb4C,EAAAA,cAAc,CAAC1G,IAAD,EAAO;EACpB,QAAI;EAAE1B,MAAAA,EAAF;EAAMC,MAAAA;EAAN,QAAayB,IAAjB;EAAA,QACC;EAAE3D,MAAAA,CAAC,EAAEwE,EAAL;EAASvE,MAAAA,CAAC,EAAEwK;EAAZ,QAAmBxI,EADpB;EAAA,QAEC;EAAEjC,MAAAA,CAAC,EAAEyE,EAAL;EAASxE,MAAAA,CAAC,EAAEyK;EAAZ,QAAmBxI,EAFpB;EAGA,QAAIyI,EAAE,GAAGxH,GAAG,CAACqB,EAAD,EAAKC,EAAL,CAAZ;EAAA,QACCmG,EAAE,GAAGzH,GAAG,CAACsH,EAAD,EAAKC,EAAL,CADT;EAAA,QAECG,EAAE,GAAGzH,GAAG,CAACoB,EAAD,EAAKC,EAAL,CAFT;EAAA,QAGCqG,EAAE,GAAG1H,GAAG,CAACqH,EAAD,EAAKC,EAAL,CAHT;EAKA,QAAIK,QAAQ,GAAGrH,KAAK,CAAC,KAAKxC,MAAN,EAAcyC,IAAd,CAAL,CAAyBuB,MAAzB,CAAiCrD,CAAD,IAAO;EACrD,UAAIT,CAAC,GAAG,KAAKmC,GAAL,CAAS1B,CAAT,CAAR;EACA,aAAO6D,OAAO,CAACtE,CAAC,CAACpB,CAAH,EAAM2K,EAAN,EAAUE,EAAV,CAAP,IAAwBnF,OAAO,CAACtE,CAAC,CAACnB,CAAH,EAAM2K,EAAN,EAAUE,EAAV,CAAtC;EACA,KAHc,CAAf;EAIA,WAAOC,QAAQ,CAAChF,GAAT,CAAalE,CAAC,IAAI,KAAK0B,GAAL,CAAS1B,CAAT,CAAlB,CAAP,CAboB;EAepB,GA7KY;;;EAgLbyI,EAAAA,eAAe,CAAC7D,EAAD,EAAKC,EAAL,EAAS;EACvB,UAAMU,KAAK,GAAG,EAAd,CADuB;;EAGvBX,IAAAA,EAAE,CAACiB,OAAH,CAAW,UAAUL,IAAV,EAAgB;EAC1BX,MAAAA,EAAE,CAACgB,OAAH,CAAW,UAAUJ,KAAV,EAAiB;EAC3B,YAAID,IAAI,CAAC0C,QAAL,CAAczC,KAAd,CAAJ,EAA0B;EACzBF,UAAAA,KAAK,CAACzF,IAAN,CAAW;EAAE0F,YAAAA,IAAF;EAAQC,YAAAA;EAAR,WAAX;EACA;EACD,OAJD;EAKA,KAND,EAHuB;;EAWvB,QAAI0D,aAAa,GAAG,EAApB;EACA5D,IAAAA,KAAK,CAACM,OAAN,CAAc,UAAUH,IAAV,EAAgB;EAC7B,YAAMuC,MAAM,GAAGtD,aAAa,CAACe,IAAI,CAACF,IAAN,EAAYE,IAAI,CAACD,KAAjB,CAA5B;;EACA,UAAIwC,MAAM,CAACxI,MAAX,EAAmB;EAClB0J,QAAAA,aAAa,GAAGA,aAAa,CAAC1H,MAAd,CAAqBwG,MAArB,CAAhB;EACA;EACD,KALD;EAMA,WAAOkB,aAAP;EACA;;EAEDC,EAAAA,MAAM,GAAG;EACR,QAAI,KAAKnJ,KAAL,KAAe,CAAnB,EAAsB;EACrB,YAAMoJ,EAAE,GAAGjD,KAAK,CAAC,KAAK/G,MAAL,CAAY,CAAZ,CAAD,EAAiB,KAAKA,MAAL,CAAY,CAAZ,CAAjB,EAAiC,KAAKA,MAAL,CAAY,CAAZ,CAAjC,CAAhB;EACA,YAAMiK,EAAE,GAAGlD,KAAK,CAAC,KAAK/G,MAAL,CAAY,CAAZ,CAAD,EAAiB,KAAKA,MAAL,CAAY,CAAZ,CAAjB,EAAiC,KAAKA,MAAL,CAAY,CAAZ,CAAjC,CAAhB;EACA,UAAKgK,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAAhB,IAAuBD,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAA1C,EAA8C,OAAO,KAAP;EAC9C;;EACD,UAAMC,EAAE,GAAG,KAAKC,MAAL,CAAY,CAAZ,CAAX;EACA,UAAMC,EAAE,GAAG,KAAKD,MAAL,CAAY,CAAZ,CAAX;EACA,QAAIE,CAAC,GAAGH,EAAE,CAACpL,CAAH,GAAOsL,EAAE,CAACtL,CAAV,GAAcoL,EAAE,CAACnL,CAAH,GAAOqL,EAAE,CAACrL,CAAhC;;EACC,QAAI,KAAKuL,GAAT,EAAc;EACdD,MAAAA,CAAC,IAAIH,EAAE,CAACxI,CAAH,GAAO0I,EAAE,CAAC1I,CAAf;EACA;;EACD,WAAOzD,GAAG,CAACG,IAAI,CAACiM,CAAD,CAAL,CAAH,GAAe7L,EAAE,GAAG,CAA3B;EACA;;EAEDoE,EAAAA,MAAM,GAAG;EACR;EACA,QAAIhB,CAAJ;EAAA,QACCmC,EAAE,GAAM,CADT;EAAA,QAEC5C,EAAE,GAAM,CAFT;EAAA,QAGCoJ,IAAI,GAAI,IAHT;EAAA,QAICC,KAAK,GAAG,EAJT;EAAA,QAKCC,KAAK,GAAG,EALT;EAAA,QAMCC,OAND,CAFQ;;EAWR,QAAI/B,OAAO,GAAG,KAAKA,OAAL,GAAeM,MAA7B;EAEA,QAAIN,OAAO,CAACxG,OAAR,CAAgB,CAAhB,MAAuB,CAAC,CAA5B,EAA+BwG,OAAO,GAAG,CAAC,CAAD,EAAIvG,MAAJ,CAAWuG,OAAX,CAAV;EAC/B,QAAIA,OAAO,CAACxG,OAAR,CAAgB,CAAhB,MAAuB,CAAC,CAA5B,EAA+BwG,OAAO,CAAClI,IAAR,CAAa,CAAb;;EAE/B,SAAKsD,EAAE,GAAG4E,OAAO,CAAC,CAAD,CAAZ,EAAiB/G,CAAC,GAAG,CAA1B,EAA6BA,CAAC,GAAG+G,OAAO,CAACvI,MAAzC,EAAiDwB,CAAC,EAAlD,EAAsD;EACrDT,MAAAA,EAAE,GAAGwH,OAAO,CAAC/G,CAAD,CAAZ;EACA8I,MAAAA,OAAO,GAAG,KAAK1E,KAAL,CAAWjC,EAAX,EAAe5C,EAAf,CAAV;EACAuJ,MAAAA,OAAO,CAAC7E,GAAR,GAAc9B,EAAd;EACA2G,MAAAA,OAAO,CAAC5E,GAAR,GAAc3E,EAAd;EACAqJ,MAAAA,KAAK,CAAC/J,IAAN,CAAWiK,OAAX;EACA3G,MAAAA,EAAE,GAAG5C,EAAL;EACA,KAvBO;;;EA0BRqJ,IAAAA,KAAK,CAAChE,OAAN,CAAczF,EAAE,IAAI;EACnBgD,MAAAA,EAAE,GAAG,CAAL;EACA5C,MAAAA,EAAE,GAAG,CAAL;;EACA,aAAOA,EAAE,IAAI,CAAb,EAAgB;EACf,aAAKA,EAAE,GAAG4C,EAAE,GAAGwG,IAAf,EAAqBpJ,EAAE,IAAI,IAAIoJ,IAA/B,EAAqCpJ,EAAE,IAAIoJ,IAA3C,EAAiD;EAChDG,UAAAA,OAAO,GAAG3J,EAAE,CAACiF,KAAH,CAASjC,EAAT,EAAa5C,EAAb,CAAV;;EACA,cAAI,CAACuJ,OAAO,CAACX,MAAR,EAAL,EAAuB;EACtB5I,YAAAA,EAAE,IAAIoJ,IAAN;;EACA,gBAAItM,GAAG,CAAC8F,EAAE,GAAG5C,EAAN,CAAH,GAAeoJ,IAAnB,EAAyB;EACxB,qBAAO,EAAP,CADwB;EAExB;;EACDG,YAAAA,OAAO,GAAG3J,EAAE,CAACiF,KAAH,CAASjC,EAAT,EAAa5C,EAAb,CAAV;EACAuJ,YAAAA,OAAO,CAAC7E,GAAR,GAAchB,GAAG,CAACd,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAWhD,EAAE,CAAC8E,GAAd,EAAmB9E,EAAE,CAAC+E,GAAtB,CAAjB;EACA4E,YAAAA,OAAO,CAAC5E,GAAR,GAAcjB,GAAG,CAAC1D,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAWJ,EAAE,CAAC8E,GAAd,EAAmB9E,EAAE,CAAC+E,GAAtB,CAAjB;EACA2E,YAAAA,KAAK,CAAChK,IAAN,CAAWiK,OAAX;EACA3G,YAAAA,EAAE,GAAG5C,EAAL;EACA;EACA;EACD;EACD;;EACD,UAAI4C,EAAE,GAAG,CAAT,EAAY;EACX2G,QAAAA,OAAO,GAAG3J,EAAE,CAACiF,KAAH,CAASjC,EAAT,EAAa,CAAb,CAAV;EACA2G,QAAAA,OAAO,CAAC7E,GAAR,GAAchB,GAAG,CAACd,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAWhD,EAAE,CAAC8E,GAAd,EAAmB9E,EAAE,CAAC+E,GAAtB,CAAjB;EACA4E,QAAAA,OAAO,CAAC5E,GAAR,GAAc/E,EAAE,CAAC+E,GAAjB;EACA2E,QAAAA,KAAK,CAAChK,IAAN,CAAWiK,OAAX;EACA;EACD,KA1BD;EA2BA,WAAOD,KAAP;EACA;;EAEDzE,EAAAA,KAAK,CAACjC,EAAD,EAAK5C,EAAL,EAAS;EACb;EACA,QAAI4C,EAAE,KAAK,CAAP,IAAY,CAAC,CAAC5C,EAAlB,EAAsB;EACrB,aAAO,KAAK6E,KAAL,CAAW7E,EAAX,EAAegF,IAAtB;EACA;;EACD,QAAIhF,EAAE,KAAK,CAAX,EAAc;EACb,aAAO,KAAK6E,KAAL,CAAWjC,EAAX,EAAeqC,KAAtB;EACA,KAPY;;;EAUb,UAAMnD,CAAC,GAAG,KAAK0H,IAAL,CAAU5G,EAAV,CAAV;EACA,UAAM6E,MAAM,GAAG;EACdzC,MAAAA,IAAI,EAAE,KAAKvF,KAAL,KAAe,CAAf,GACH,IAAI2G,OAAJ,CAAY,CAACtE,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAZ,CADG,GAEH,IAAIsE,OAAJ,CAAY,CAACtE,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,CAAZ,CAHW;EAIdmD,MAAAA,KAAK,EAAE,KAAKxF,KAAL,KAAe,CAAf,GACJ,IAAI2G,OAAJ,CAAY,CAACtE,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAZ,CADI,GAEJ,IAAIsE,OAAJ,CAAY,CAACtE,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,CAAZ,CANW;EAOd2H,MAAAA,IAAI,EAAE3H;EAPQ,KAAf,CAXa;;EAsBb2F,IAAAA,MAAM,CAACzC,IAAP,CAAYN,GAAZ,GAAmBhB,GAAG,CAAC,CAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,KAAKgB,GAAhB,EAAqB,KAAKC,GAA1B,CAAtB;EACA8C,IAAAA,MAAM,CAACzC,IAAP,CAAYL,GAAZ,GAAmBjB,GAAG,CAACd,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,KAAK8B,GAAhB,EAAqB,KAAKC,GAA1B,CAAtB;EACA8C,IAAAA,MAAM,CAACxC,KAAP,CAAaP,GAAb,GAAmBhB,GAAG,CAACd,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,KAAK8B,GAAhB,EAAqB,KAAKC,GAA1B,CAAtB;EACA8C,IAAAA,MAAM,CAACxC,KAAP,CAAaN,GAAb,GAAmBjB,GAAG,CAAC,CAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,KAAKgB,GAAhB,EAAqB,KAAKC,GAA1B,CAAtB,CAzBa;;EA4Bb,QAAI,CAAC3E,EAAL,EAAS,OAAOyH,MAAP,CA5BI;;EA+BbzH,IAAAA,EAAE,GAAG0D,GAAG,CAAC1D,EAAD,EAAK4C,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAR;EACA,WAAO6E,MAAM,CAACxC,KAAP,CAAaJ,KAAb,CAAmB7E,EAAnB,EAAuBgF,IAA9B;EACA;;EAEDwE,EAAAA,IAAI,CAAChK,CAAD,EAAI;EACP,QAAIT,CAAC,GAAK,KAAKF,MAAf;EAAA,QACC6K,EAAE,GAAI,EADP;EAAA,QAEC5H,CAAC,GAAK,EAFP;EAAA,QAGCsF,GAAG,GAAG,CAHP;EAIAtF,IAAAA,CAAC,CAACsF,GAAG,EAAJ,CAAD,GAAWrI,CAAC,CAAC,CAAD,CAAZ;EACA+C,IAAAA,CAAC,CAACsF,GAAG,EAAJ,CAAD,GAAWrI,CAAC,CAAC,CAAD,CAAZ;EACA+C,IAAAA,CAAC,CAACsF,GAAG,EAAJ,CAAD,GAAWrI,CAAC,CAAC,CAAD,CAAZ;;EACA,QAAI,KAAKU,KAAL,KAAe,CAAnB,EAAsB;EACrBqC,MAAAA,CAAC,CAACsF,GAAG,EAAJ,CAAD,GAAWrI,CAAC,CAAC,CAAD,CAAZ;EACA,KAVM;;;EAYP,WAAOA,CAAC,CAACE,MAAF,GAAW,CAAlB,EAAqB;EACpByK,MAAAA,EAAE,GAAG,EAAL;;EACA,WAAK,IAAIjJ,CAAC,GAAG,CAAR,EAAWkJ,EAAX,EAAehJ,CAAC,GAAG5B,CAAC,CAACE,MAAF,GAAW,CAAnC,EAAsCwB,CAAC,GAAGE,CAA1C,EAA6CF,CAAC,EAA9C,EAAkD;EACjDkJ,QAAAA,EAAE,GAAGjE,IAAI,CAAClG,CAAD,EAAIT,CAAC,CAAC0B,CAAD,CAAL,EAAU1B,CAAC,CAAC0B,CAAC,GAAG,CAAL,CAAX,CAAT;EACAqB,QAAAA,CAAC,CAACsF,GAAG,EAAJ,CAAD,GAAWuC,EAAX;;EACAD,QAAAA,EAAE,CAACpK,IAAH,CAAQqK,EAAR;EACA;;EACD5K,MAAAA,CAAC,GAAG2K,EAAJ;EACA;;EACD,WAAO5H,CAAP;EACA,GArUY;;;EAwUbkH,EAAAA,MAAM,CAACxJ,CAAD,EAAI;EACT,UAAMY,CAAC,GAAG,KAAKiH,UAAL,CAAgB7H,CAAhB,CAAV;EACA,UAAMsC,CAAC,GAAG3E,IAAI,CAACiD,CAAC,CAACzC,CAAF,GAAMyC,CAAC,CAACzC,CAAR,GAAYyC,CAAC,CAACxC,CAAF,GAAMwC,CAAC,CAACxC,CAArB,CAAd;EACA,WAAO;EAAED,MAAAA,CAAC,EAAE,CAACyC,CAAC,CAACxC,CAAH,GAAOkE,CAAZ;EAAelE,MAAAA,CAAC,EAAEwC,CAAC,CAACzC,CAAF,GAAMmE;EAAxB,KAAP;EACA;;EA5UY;;;;;;;;"}