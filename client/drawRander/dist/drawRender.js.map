{"version":3,"file":"drawRender.js","sources":["../src/utils.js","../src/shape/filter.js","../src/shape/rect.js","../src/shape/circle.js","../src/shape/ellipse.js","../src/shape/polygon.js","../src/shape/bezier.js","../src/prototype.js","../index.js"],"sourcesContent":["const { pow, sqrt } = Math\n\n\n// 获取真实数据类型\nexport const getClass = element => {\n\treturn Object.prototype.toString.call(element).slice(8, -1)\n}\n\n// 深拷贝\nexport const deepCopy = obj => {\n\ttry {\n\t\treturn JSON.parse(JSON.stringify(obj))\n\t} catch(e) {\n\t\tconsole.error(e)\n\t\treturn obj\n\t}\n}\n\n// 对象是否相等\nexport const objEqual = (obj1, obj2) => {\n\ttry {\n\t\treturn JSON.stringify(obj1) === JSON.stringify(obj2)\n\t} catch(e) {\n\t\tconsole.error(e)\n\t\treturn false\n\t}\n}\n\n// 获取元素定位\nexport const getOffset = element => {\n\tvar t\n\tconst top  = (((t = document.documentElement) || (t = document.body.parentNode)) && typeof t.scrollTop  === 'number'? t: document.body).scrollTop\n\tconst left = (((t = document.documentElement) || (t = document.body.parentNode)) && typeof t.scrollLeft === 'number'? t: document.body).scrollLeft\n\treturn {\n\t\ttop,\n\t\tleft\n\t}\n}\n\n// 获取两点间的距离\nexport const getDistance = (x1, y1, x2, y2) => {\n\tlet dx = x1 - x2,\n\t\tdy = y1 - y2\n\treturn sqrt(pow(dx, 2) + pow(dy, 2))\n}","import { getClass, objEqual } from '../utils'\n\nconst { PI } = Math\n\nconst getDefaultValue = {\n\tx:           { type: Number, default: (val = 0) => val },\t\t\t\t\t\t\t\t\t\t// (圆心) x轴坐标\n\ty:           { type: Number, default: (val = 0) => val },\t\t\t\t\t\t\t\t\t\t// (圆心) y轴坐标\n\tr:           { type: Number, default: (val = 0) => val < 0? 0: val },\t\t\t\t\t\t\t// 半径\n\trx:          { type: Number, default: (val = 0) => val < 0? 0: val },\t\t\t\t\t\t\t// x轴半径\n\try:          { type: Number, default: (val = 0) => val < 0? 0: val },\t\t\t\t\t\t\t// y轴半径\n\twidth:       { type: Number, default: (val = 0) => val < 0? 0: val },\t\t\t\t\t\t\t// 宽\n\theight:      { type: Number, default: (val = 0) => val < 0? 0: val },\t\t\t\t\t\t\t// 高\n\trotate:      { type: Number, default: (val = 0)   => val < 0? 0: val > 360? 360: val },\t\t\t// 旋转角度\n\tsAngle:      { type: Number, default: (val = 0)   => val < 0? 0: val > 360? 360: val },\t\t\t// 起始角\n\teAngle:      { type: Number, default: (val = 360) => val < 0? 0: val > 360? 360: val },\t\t\t// 结束角\n\t// 路径 (polygon)\n\tpoints:      {\n\t\ttype: Array,\n\t\tdefault: (val = []) => {\n\t\t\tlet len = val.length\n\t\t\tif (!len) return []\n\t\t\tif (len % 3 != 1) return []\n\t\t\tlet error = 0\n\t\t\tval.forEach(vs => {\n\t\t\t\tif (error) return\n\t\t\t\tlet t = getClass(vs)\n\t\t\t\tif (t != 'Array')   return error = 1\n\t\t\t\tif (vs.length != 2) return error = 1\n\t\t\t\tlet [ num1, num2 ] = vs\n\t\t\t\tvs.forEach(num => {\n\t\t\t\t\tif (error) return\n\t\t\t\t\tlet nt = getClass(num)\n\t\t\t\t\tif (nt != 'Number') return error = 1\n\t\t\t\t})\n\t\t\t})\n\t\t\tif (error || val.length < 2) return []\n\t\t\tval[-1] = val[val.length - 1]\n\t\t\treturn val\n\t\t}\n\t},\n\t// 路径 (bezier)\n\tpaths:       {\n\t\ttype: Array,\n\t\tdefault: (val = []) => {\n\t\t\tlet error = 0\n\t\t\tval.forEach(vs => {\n\t\t\t\tif (error) return\n\t\t\t\tlet t = getClass(vs)\n\t\t\t\tif (t != 'Array') return error = 1\n\t\t\t\tif (vs.length != 2) return error = 1\n\t\t\t\tlet [ num1, num2 ] = vs\n\t\t\t\tvs.forEach(num => {\n\t\t\t\t\tif (error) return\n\t\t\t\t\tlet nt = getClass(num)\n\t\t\t\t\tif (nt != 'Number') return error = 1\n\t\t\t\t})\n\t\t\t})\n\t\t\tif (error || val.length < 4) return []\n\t\t\tval[-1] = val[val.length - 1]\n\t\t\treturn val\n\t\t}\n\t},\n\topacity:     { type: Number, default: (val = 1) => val < 0? 0: val > 1? 1: val },\t\t\t\t// 透明度\n\tfill:        { type: String, default: (val) => val || 'black' },\t\t\t\t\t\t\t\t// 填充色\n\tstroke:      { type: String, default: (val) => val || 'rgba(0, 0, 0, 0)' },\t\t\t\t\t\t// 描边色\n\tstrokeWidth: { type: Number, default: (val = 0) => val < 0? 0: val },\t\t\t\t\t\t\t// 描边宽\n}\n\n// 属性字段索引\nconst keysMap = {\n\trect:    ['x', 'y', 'width', 'height', 'opacity', 'fill', 'stroke', 'strokeWidth'],\n\tcircle:  ['x', 'y', 'r', /*'sAngle', 'eAngle',*/ 'opacity', 'fill', 'stroke', 'strokeWidth'],\n\tellipse: ['x', 'y', 'rx', 'ry', /*'rotate', 'sAngle', 'eAngle',*/ 'opacity', 'fill', 'stroke', 'strokeWidth'],\n\tpolygon: ['points', 'opacity', 'fill', 'stroke', 'strokeWidth'],\n\tbezier:  ['paths', 'opacity', 'fill', 'stroke', 'strokeWidth']\n}\n\nexport const filter = (name, cfg) => {\n\tlet attrs = cfg.attrs\n\tif (!attrs) attrs = cfg.attrs = {}\n\n\tlet kMap = keysMap[name]\n\tif (!kMap) return\n\n\t// 过滤多余属性\n\tObject.keys(attrs).forEach(key => {\n\t\tlet idx = kMap.indexOf(key)\n\t\tif (idx < 0) delete attrs[key]\n\t})\n\n\t// 检测 & 赋值默认值\n\tkMap.forEach(key => {\n\t\tlet val   = attrs[key],\n\t\t\tdef   = getDefaultValue[key],\n\t\t\ttName = def.type.name,\n\t\t\tcName\n\n\t\tif (val === undefined) return attrs[key] = def.default()\t\t// 空值赋值\n\n\t\tcName = getClass(val)\n\t\tif (cName != tName) return attrs[key] = def.default()\t\t\t// 类型不正确赋值\n\n\t\tattrs[key] = def.default(val)\n\t})\n}\n","import { filter } from './filter'\n\nexport default class rect {\n\tconstructor(cfg = {}, parent) {\n\t\tthis.cfg    = cfg\n\t\tthis.parent = parent\n\t\tthis.group  = []\n\n\t\tthis.init(cfg)\n\n\t\tthis.draw(cfg, this.group)\n\n\t\tif (cfg.name) this.name = cfg.name\n\t}\n\tinit(cfg) {\n\t\tfilter('rect', cfg)\n\t}\n\tdraw(cfg, group) {\n\t\tlet { ctx } = this.parent\n\t\tlet { x, y, width, height, opacity, fill, stroke, strokeWidth } = cfg.attrs\n\t\t\n\t\t// 设置画板透明度\n\t\tif (opacity < 1) ctx.globalAlpha = opacity\n\n\t\tctx.beginPath()\n\n\t\t// 绘制矩形\n\t\tctx.rect(x, y, width, height)\n\n\t\t// 填充颜色\n\t\tif (fill) {\n\t\t\tctx.fillStyle = fill\n\t\t\tctx.fill()\n\t\t}\n\n\t\t// 描边\n\t\tif (stroke && strokeWidth > 0) {\n\t\t\tctx.strokeStyle = stroke\n\t\t\tctx.lineWidth   = strokeWidth\n\t\t\tctx.stroke()\n\t\t}\n\n\t\tctx.closePath()\n\n\t\tctx.globalAlpha = 1\n\t}\n\t// 根据坐标判断点是否在矩形内\n\tpointIn(offsetX, offsetY) {\n\t\tlet { x, y, width, height } = this.cfg.attrs\n\t\tlet ex = x + width, ey = y + height\n\t\treturn offsetX >= x && offsetX <= ex && offsetY >= y && offsetY <= ey\n\t}\n}","import { filter } from './filter'\nimport { getDistance } from '../utils'\n\nconst { PI } = Math\n\nexport default class circle {\n\tconstructor(cfg = {}, parent) {\n\t\tthis.cfg    = cfg\n\t\tthis.parent = parent\n\t\tthis.group  = []\n\n\t\tthis.init(cfg)\n\n\t\tthis.draw(cfg, this.group)\n\n\t\tif (cfg.name) this.name = cfg.name\n\t}\n\tinit(cfg) {\n\t\tfilter('circle', cfg)\n\t}\n\tdraw(cfg, group) {\n\t\tlet { ctx } = this.parent\n\t\tlet { x, y, r, sAngle, eAngle, opacity, fill, stroke, strokeWidth } = cfg.attrs\n\t\t\n\t\t// 设置画板透明度\n\t\tif (opacity < 1) ctx.globalAlpha = opacity\n\t\tctx.beginPath()\n\n\t\t// 绘制矩形\n\t\tctx.arc(x, y, r, sAngle / 180 * PI, eAngle / 180 * PI)\n\n\t\t// 填充颜色\n\t\tctx.fillStyle = fill\n\t\tctx.fill()\n\n\t\t// 描边\n\t\tif (strokeWidth) {\n\t\t\tctx.strokeStyle = stroke\n\t\t\tctx.lineWidth   = strokeWidth\n\t\t\tctx.stroke()\n\t\t}\n\n\t\tctx.closePath()\n\n\t\tctx.globalAlpha = 1\n\t}\n\t// 根据坐标判断点是否在矩形内\n\tpointIn(offsetX, offsetY) {\n\t\tlet { x, y, r } = this.cfg.attrs\n\t\tlet dis = getDistance(offsetX, offsetY, x, y)\n\t\treturn dis <= r\n\t}\n}","import { filter } from './filter'\nimport { getDistance } from '../utils'\n\nconst { PI } = Math\n\nexport default class ellipse {\n\tconstructor(cfg = {}, parent) {\n\t\tthis.cfg    = cfg\n\t\tthis.parent = parent\n\t\tthis.group  = []\n\n\t\tthis.init(cfg)\n\n\t\tthis.draw(cfg, this.group)\n\n\t\tif (cfg.name) this.name = cfg.name\n\t}\n\tinit(cfg) {\n\t\tfilter('ellipse', cfg)\n\t}\n\tdraw(cfg, group) {\n\t\tlet { ctx } = this.parent\n\t\tlet { x, y, rx, ry, rotate, sAngle, eAngle, opacity, fill, stroke, strokeWidth } = cfg.attrs\n\t\t\n\t\t// 设置画板透明度\n\t\tif (opacity < 1) ctx.globalAlpha = opacity\n\t\tctx.beginPath()\n\n\t\t// 绘制椭圆\n\t\tctx.ellipse(x, y, rx, ry, 0, 0, 2 * PI)\n\n\t\t// 填充颜色\n\t\tctx.fillStyle = fill\n\t\tctx.fill()\n\n\t\t// 描边\n\t\tif (strokeWidth) {\n\t\t\tctx.strokeStyle = stroke\n\t\t\tctx.lineWidth   = strokeWidth\n\t\t\tctx.stroke()\n\t\t}\n\n\t\tctx.closePath()\n\n\t\tctx.globalAlpha = 1\n\t}\n\t// 根据坐标判断点是否在矩形内\n\tpointIn(offsetX, offsetY) {\n\t\tlet { x, y, r } = this.cfg.attrs\n\t\tlet dis = getDistance(offsetX, offsetY, x, y)\n\t\treturn dis <= r\n\t}\n}","import { filter } from './filter'\n\nexport default class polygon {\n\tconstructor(cfg = {}, parent) {\n\t\tthis.cfg    = cfg\n\t\tthis.parent = parent\n\t\tthis.group  = []\n\n\t\tthis.init(cfg)\n\n\t\tthis.draw(cfg, this.group)\n\n\t\tif (cfg.name) this.name = cfg.name\n\t}\n\tinit(cfg) {\n\t\tfilter('polygon', cfg)\n\t}\n\tdraw(cfg, group) {\n\t\tlet { ctx } = this.parent\n\t\tlet { points, opacity, fill, stroke, strokeWidth } = cfg.attrs\n\t\t\n\t\tif (points.length < 2) return console.log('polygon 数据为空!')\n\n\t\t// 设置画板透明度\n\t\tif (opacity < 1) ctx.globalAlpha = opacity\n\n\t\tctx.beginPath()\n\n\t\t// 绘制矩形\n\t\tlet [ x, y ] = points[0],\n\t\t\t[ ex, ey ] = points[-1]\n\t\tctx.moveTo(x, y)\n\t\tpoints.forEach((point, i) => {\n\t\t\tif (!i) return\n\t\t\tlet [ x, y ] = point\n\t\t\tctx.lineTo(x, y)\n\t\t})\n\n\t\tif (ex != x || ey != y) ctx.lineTo(x, y)\t// 线闭合\n\n\t\t// 填充颜色\n\t\tif (fill) {\n\t\t\tctx.fillStyle = fill\n\t\t\tctx.fill()\n\t\t}\n\n\t\t// 描边\n\t\tif (stroke && strokeWidth > 0) {\n\t\t\tctx.strokeStyle = stroke\n\t\t\tctx.lineWidth   = strokeWidth\n\t\t\tctx.stroke()\n\t\t}\n\n\t\tctx.closePath()\n\n\t\tctx.globalAlpha = 1\n\t}\n\t// 根据坐标判断点是否在矩形内\n\tpointIn(offsetX, offsetY) {\n\t\tlet { points } = this.cfg.attrs\n\t\tlet isIn = false\n\t\tpoints.forEach(([ x1, y1 ], i) => {\n\t\t\tlet [ x2, y2 ] = points[i - 1],\n\t\t\t\tdx = x2 - x1,\n\t\t\t\tdy = y2 - y1\n\n\t\t\t// 判断当前点的y轴是否在两点之间 不在则不相交\n\t\t\tif ((y1 > offsetY) === (y2 > offsetY)) return\n\n\t\t\tlet scale = (offsetY - y1) / dy\t\t// y轴比率\n\t\t\tlet ox    = x1 + dx * scale\t\t\t// 交点x轴坐标\n\t\t\t\n\t\t\t// 判断交点在当前点哪边 左边则不相交\n\t\t\tif (ox > offsetX) return\n\t\t\tisIn = !isIn\n\t\t})\n\t\treturn isIn\n\t}\n}","import { filter } from './filter'\n\nexport default class bezier {\n\tconstructor(cfg = {}, parent) {\n\t\tthis.cfg    = cfg\n\t\tthis.parent = parent\n\t\tthis.group  = []\n\n\t\tthis.init(cfg)\n\n\t\tthis.draw(cfg, this.group)\n\n\t\tif (cfg.name) this.name = cfg.name\n\t}\n\tinit(cfg) {\n\t\tfilter('bezier', cfg)\n\t}\n\tdraw(cfg, group) {\n\t\tlet { ctx } = this.parent\n\t\tlet { paths, opacity, fill, stroke, strokeWidth } = cfg.attrs\n\t\tlet len = paths.length\n\t\tif (len < 4) return console.log('bezier 数据为空!')\n\n\t\t// 设置画板透明度\n\t\tif (opacity < 1) ctx.globalAlpha = opacity\n\n\t\tctx.beginPath()\n\n\t\t// 绘制矩形\n\t\tlet [ x, y ] = paths[0]\n\t\tctx.moveTo(x, y)\n\n\t\tfor (let i = 1, j = i + 1, k = i + 2; i < len; i += 3, j += 3, k += 3) {\n\t\t\tlet cp1 = paths[i],\n\t\t\t\tcp2 = paths[j],\n\t\t\t\tend = paths[k]\n\t\t\tctx.bezierCurveTo(...cp1, ...cp2, ...end)\n\t\t}\n\n\t\t// 填充颜色\n\t\tif (fill) {\n\t\t\tctx.fillStyle = fill\n\t\t\tctx.fill()\n\t\t}\n\n\t\t// 描边\n\t\tif (stroke && strokeWidth > 0) {\n\t\t\tctx.strokeStyle = stroke\n\t\t\tctx.lineWidth   = strokeWidth\n\t\t\tctx.stroke()\n\t\t}\n\n\t\tctx.closePath()\n\n\t\tctx.globalAlpha = 1\n\n\t\tpaths.forEach(cp => {\n\t\t\tctx.beginPath()\n\t\t\tctx.arc(...cp, 2, 0, 2 * Math.PI)\n\t\t\tctx.fillStyle = 'red'\n\t\t\tctx.fill()\n\t\t\tctx.closePath()\n\t\t})\n\t}\n\t// 根据坐标判断点是否在矩形内\n\tpointIn(offsetX, offsetY) {\n\t\tlet { paths } = this.cfg.attrs\n\t\tlet isIn = false\n\t\t// paths.forEach(([ x1, y1 ], i) => {\n\t\t// })\n\t\treturn isIn\n\t}\n}","(function () {\n\t\n\t// 创建椭圆\n\tif (CanvasRenderingContext2D.prototype.ellipse === undefined) {\n\t\tCanvasRenderingContext2D.prototype.ellipse = function(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n\t\t\tthis.save()\n\t\t\tthis.translate(x, y)\n\t\t\tthis.rotate(rotation)\n\t\t\tthis.scale(radiusX, radiusY)\n\t\t\tthis.arc(0, 0, 1, startAngle, endAngle, antiClockwise)\n\t\t\tthis.restore()\n\t\t}\n\t}\n\n}());","import { version } from './package.json'\n\nimport { getClass, getOffset, deepCopy } from './src/utils'\nimport * as shapeRender from './src/shape'\n\nimport './src/prototype'\n\nconst allowTypeMap = {\n\tString: container => document.querySelector(`#${container}`),\n\tHTMLDivElement: container => container\n}\n\nconst defaultOptions = {\n\n}\n\nclass DRender {\n\tconstructor(container, options = {}) {\n\t\tlet type  = getClass(container),\n\t\t\tallow = allowTypeMap[type], $container\n\t\tif (!allow) return console.error('请指定图画布容器的 id 或 div元素')\n\t\t$container = allow(container)\n\t\tif (!$container) return console.error('请指定图画布容器的 id 或 div元素')\n\n\t\tthis.container = $container\n\t\tthis.options = { ...deepCopy(defaultOptions), ...options }\n\t\tthis.optionsInit($container, this.options)\n\t\tthis.init($container, this.options)\n\t\tthis.version = version\n\n\t\tconsole.log('version ' + version)\n\t}\n\t// 配置初始化\n\toptionsInit(container, options) {\n\t\tlet { scrollWidth, scrollHeight } = container\n\t\tlet { width, height } = options\n\t\tif (width  === undefined) options.width  = scrollWidth\n\t\tif (height === undefined) options.height = scrollHeight\n\t}\n\t// 初始化\n\tinit(container, options) {\n\t\tthis.nodes = []\n\n\t\tthis.createCanvas()\n\n\t\tthis.eventListener()\n\t}\n\t// 创建画布\n\tcreateCanvas() {\n\t\tconst { container, options } = this\n\t\tconst { width, height } = options\n\t\tconst canvas = this.graph = document.createElement('canvas')\n\t\tconst ctx    = this.ctx   = canvas.getContext('2d')\n\t\tObject.assign(canvas, {\n\t\t\twidth,\n\t\t\theight\n\t\t})\n\n\t\tcontainer.appendChild(canvas)\n\t}\n\t// 事件监听\n\teventListener() {\n\t\tconst { container, ctx, nodes } = this\n\t\tcontainer.addEventListener('click', function(e) {\n\t\t\tlet { offsetX, offsetY } = e\n\t\t\tlet offset  = getOffset(container)\n\t\t\t// console.log(offset, offsetX, offsetY, inPath)\n\t\t\tconsole.log(offsetX, offsetY)\n\t\t\tlet curNode\n\t\t\tnodes.forEach(node => {\n\t\t\t\tlet isIn = node.pointIn(offsetX, offsetY)\n\t\t\t\tif (!isIn) return\n\t\t\t\tcurNode = node\n\t\t\t})\n\t\t\tif (!curNode) return\n\t\t\tconsole.log(curNode)\n\t\t}, false)\n\t}\n\t// 添加图形\n\taddNode(shapeName, config = {}) {\n\t\tconst Shape = shapeRender[shapeName]\n\t\tif (!Shape) return console.error(`${shapeName} 图形不存在!`)\n\t\tconst shape = new Shape(config, this)\n\t\tthis.nodes.push(shape)\n\t}\n}\nexport default DRender\n"],"names":["pow","sqrt","Math","getClass","element","Object","prototype","toString","call","slice","deepCopy","obj","JSON","parse","stringify","e","console","error","getOffset","t","top","document","documentElement","body","parentNode","scrollTop","left","scrollLeft","getDistance","x1","y1","x2","y2","dx","dy","getDefaultValue","x","type","Number","default","val","y","r","rx","ry","width","height","rotate","sAngle","eAngle","points","Array","len","length","forEach","vs","num","nt","paths","opacity","fill","String","stroke","strokeWidth","keysMap","rect","circle","ellipse","polygon","bezier","filter","name","cfg","attrs","kMap","keys","key","idx","indexOf","def","tName","cName","undefined","constructor","parent","group","init","draw","ctx","globalAlpha","beginPath","fillStyle","strokeStyle","lineWidth","closePath","pointIn","offsetX","offsetY","ex","ey","PI","arc","dis","log","moveTo","point","i","lineTo","isIn","scale","ox","j","k","cp1","cp2","end","bezierCurveTo","cp","CanvasRenderingContext2D","radiusX","radiusY","rotation","startAngle","endAngle","antiClockwise","save","translate","restore","allowTypeMap","container","querySelector","HTMLDivElement","defaultOptions","DRender","options","allow","$container","optionsInit","version","scrollWidth","scrollHeight","nodes","createCanvas","eventListener","canvas","graph","createElement","getContext","assign","appendChild","addEventListener","curNode","node","addNode","shapeName","config","Shape","shapeRender","shape","push"],"mappings":"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"}